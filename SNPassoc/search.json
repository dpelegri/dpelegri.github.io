[{"path":"/articles/SNPassoc.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"SNPassoc: an R package to perform whole genome association studies","text":"SNPassoc package contains facilities data manipulation, tools exploratory data analysis, convenient graphical facilities, tools assessing genetic association quantitative categorial (case-control) traits whole genome approaches. Genome-based studies normally analyzed using multistage approach. first step researchers interested assessing association outcome thousands SNPs. second possibly third step, medium/large scale studies performed hundred SNPs, putative association found first step, genotyped. SNPassoc specially designed analyzing kind designs. addition, convenience-based approach (select variants basis logistical considerations ease cost genotyping) can also analyzed using SNPassoc. Different genetic models also implemented package. Analysis multiple SNPs can analyzed using either haplotype gene-gene interaction approaches. document updated version initial vignette published SNPassoc paper González et al. (2007). contains realistic example belonging real dataset. original vignette still available .","code":""},{"path":"/articles/SNPassoc.html","id":"data-loading","dir":"Articles","previous_headings":"","what":"Data loading","title":"SNPassoc: an R package to perform whole genome association studies","text":"SNP data typically available text format Excel spreadsheets easily uploaded R data frame. , illustrative example, analyzing dataset containing epidemiological information 51 SNPs case-control study asthma. data available within SNPassoc can loaded , data loaded R session observe case-control status (0: control, 1: asthma) another 4 variables encoding country origin, gender, age, body mass index (bmi) smoking status (0: smoker, 1: ex-smoker, 2: current smoker). 51 SNPs whose genotypes given alleles names.","code":"data(asthma, package = \"SNPassoc\") str(asthma, list.len=9) 'data.frame':   1578 obs. of  57 variables:  $ country    : Factor w/ 10 levels \"Australia\",\"Belgium\",..: 5 5 5 5 5 5 5 5 5 5 ...  $ gender     : Factor w/ 2 levels \"Females\",\"Males\": 2 2 2 1 1 1 1 2 1 1 ...  $ age        : num  42.8 50.2 46.7 47.9 48.4 ...  $ bmi        : num  20.1 24.7 27.7 33.3 25.2 ...  $ smoke      : int  1 0 0 0 0 1 0 0 0 0 ...  $ casecontrol: int  0 0 0 0 1 0 0 0 0 0 ...  $ rs4490198  : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 3 3 3 2 2 2 3 2 2 2 ...  $ rs4849332  : Factor w/ 3 levels \"GG\",\"GT\",\"TT\": 3 2 3 2 1 2 3 3 2 1 ...  $ rs1367179  : Factor w/ 3 levels \"CC\",\"GC\",\"GG\": 2 2 2 3 3 3 2 3 3 3 ...   [list output truncated] asthma[1:5, 1:8] country  gender      age      bmi smoke casecontrol rs4490198 rs4849332 1 Germany   Males 42.80630 20.14797     1           0        GG        TT 2 Germany   Males 50.22861 24.69136     0           0        GG        GT 3 Germany   Males 46.68857 27.73230     0           0        GG        TT 4 Germany Females 47.86311 33.33187     0           0        AG        GT 5 Germany Females 48.44079 25.23634     0           1        AG        GG"},{"path":"/articles/SNPassoc.html","id":"descriptive-analysis","dir":"Articles","previous_headings":"","what":"Descriptive analysis","title":"SNPassoc: an R package to perform whole genome association studies","text":"start analysis, must indicate columns dataset asthma contain SNP data, using setupSNP function. example, SNPs start column 7 onwards, specify argument colSNPs alternative way determining columns containing SNPs argument sep indicates character separating alleles. default value ’‘/´´. case, separating character, , set sep=““. argument name.genotypes can used genotypes available formats, 0, 1, 2 ’‘norm´´,’‘het´´,’’mut´´. purpose setupSNP function assign class snp SNPs variables, SNPassoc methods applied. function labels common genotype across subjects reference one. numerous SNPs available, function can parallelized argument mc.cores indicates number processors used. can verify SNP variables given new class snp summarize content summary shows genotype allele frequencies given SNP, testing Hardy-Weinberg equilibrium (HWE). can also visualize results plot SNP summary. Bar chart showing basic information given SNP argument type helps get pie chart SNP summary. Pie chart showing basic information given SNP summary function can also applied whole dataset showing SNP labels minor/major allele format, major allele frequency HWE test percentage missing genotypes. Missing values can explored plotting Missing genotypes. Black squares shows missing genotuype information asthma data example. plot can used inspect missing values appear randomly across individuals SNPs. case, can see missing pattern may considered random, except three clusters consecutive SNPs (large black squares). individuals checked possible problems genotyping.","code":"library(SNPassoc) asthma.s <- setupSNP(data=asthma, colSNPs=7:ncol(asthma), sep=\"\") idx <- grep(\"^rs\", colnames(asthma)) asthma.s <- setupSNP(data=asthma, colSNPs=idx, sep=\"\") head(asthma.s$rs1422993) [1] G/G G/T G/G G/T G/T G/G Genotypes: G/G G/T T/T Alleles:  G T class(asthma.s$rs1422993) [1] \"snp\"    \"factor\" summary(asthma.s$rs1422993) Genotypes:      frequency percentage G/G       903  57.224335 G/T       570  36.121673 T/T       105   6.653992  Alleles:    frequency percentage G      2376   75.28517 T       780   24.71483  HWE (p value): 0.250093 plot(asthma.s$rs1422993) plot(asthma.s$rs1422993, type=pie) summary(asthma.s, print=FALSE) alleles major.allele.freq HWE      missing (%) rs4490198  A/G     59.2              0.174133  0.6        rs4849332  G/T     61.8              0.522060  0.1        rs1367179  G/C     81.4              0.738153  1.0        rs11123242 C/T     81.7              0.932898  0.6        rs13014858 G/A     58.3              0.351116  0.1        rs1430094  G/A     66.9              0.305509  0.4        rs1430093  C/A     66.6              0.817701  3.5        rs746710   G/C     51.5              0.614368  0.0        rs1430090  T/G     70.0              0.025180  1.6        rs6737251  C/T     69.3              0.235996  0.3        rs11685217 C/T     80.1              0.009462  4.5        rs1430097  C/A     65.1              0.738166  1.0        rs10496465 A/G     85.8              0.917997  0.6        rs3756688  T/C     63.9              0.154632  0.6        rs2303063  A/G     53.0              0.722069  1.1        rs1422993  G/T     75.3              0.250093  0.0        rs2400478  G/A     62.6              0.256786  0.9        rs714588   A/G     54.9              0.838329  0.8        rs1023555  T/A     76.8              0.943443  0.5        rs898070   G/A     62.6              1.000000  0.6        rs963218   C/T     53.2              0.389387  0.3        rs1419835  C/T     78.2              0.505391  0.6        rs765023   T/C     64.5              0.030513  6.9        rs1345267  A/G     61.0              0.112183  0.1        rs324381   G/A     64.6              0.242223 11.6        rs184448   T/G     55.9              0.008446  2.2        rs324396   C/T     71.2              0.197291  0.3        rs324957   G/A     57.0              0.007417  0.4        rs324960   C/T     66.6              0.077777  1.1        rs10486657 C/T     81.3              0.672703  4.3        rs324981   A/T     53.2              0.048438  0.2        rs1419780  C/G     80.8              0.569652  0.2        rs325462   T/A     51.0              0.337862  0.3        rs727162   G/C     78.5              0.765708  0.0        rs10250709 G/A     65.4              0.266434  0.0        rs6958905  T/C     64.7              0.377472  0.4        rs10238983 T/C     75.7              0.216435  0.4        rs4941643  A/G     54.1              0.635887  7.2        rs3794381  C/G     71.7              0.652089  7.1        rs2031532  G/A     65.0              0.911918  0.0        rs2247119  T/C     71.5              0.457710  0.5        rs8000149  T/C     63.2              0.588077  0.4        rs2274276  G/C     57.0              0.571386  0.6        rs7332573  G/T     91.5              0.869947  1.5        rs3829366  T/A     51.6              0.722626  1.3        rs6084432  G/A     83.7              0.266716  0.6        rs512625   G/A     69.5              0.905395  0.4        rs3918395  G/T     86.8              0.508732  1.2        rs2787095  G/C     60.2              0.102053  0.8        rs2853215  G/A     73.0              0.249516  0.2 plotMissing(asthma.s, print.labels.SNPs = FALSE)"},{"path":"/articles/SNPassoc.html","id":"hardy-weinberg-equilibrium","dir":"Articles","previous_headings":"","what":"Hardy-Weinberg equilibrium","title":"SNPassoc: an R package to perform whole genome association studies","text":"Genotyping SNPs needs pass quality control measures. Aside technical details need considered filtering SNPs low quality, genotype calling error can detected HWE test. test compares observed genotype frequencies expected random mating, follows SNPs absence selection, mutation, genetic drift, forces. Therefore, HWE must checked controls. several tests described literature verify HWE. SNPassoc HWE tested bi-allelic SNP markers using fast exact test Wigginton, Cutler, Abecasis (2005) implemented tableHWE function. observe first SNPs dataset HWE since P-values rejecting HWE hypothesis (null hypothesis) larger 0.05. However, tested control samples , stratifying cases controls see rs1345267 HWE within controls P-value <0.05. Notice one interested keeping SNPsthat reject null hypothesis. several SNPs tested, multiple comparisons must considered. particular setting, threshold 0.001 normally considered. quality control measure, necessary conservative situations false discovery rates need controlled. SNPs pass HWE test must removed form analyses. can recall setupSNP indicate columns SNPs kept Note variable pos redefine SNP variables considered class snp.","code":"hwe <- tableHWE(asthma.s) head(hwe) HWE (p value) rs4490198      0.1741325 rs4849332      0.5220596 rs1367179      0.7381531 rs11123242     0.9328981 rs13014858     0.3511162 rs1430094      0.3055089 hwe2 <- tableHWE(asthma.s, casecontrol)  #SNPs is HWE in the whole sample but not controls snpNHWE <- hwe2[,1]>0.05 & hwe2[,2]<0.05 rownames(hwe2)[snpNHWE] [1] \"rs1345267\" hwe2[snpNHWE,] all groups          0          1  0.11218285 0.04956349 0.81604706 snps.ok <- rownames(hwe2)[hwe2[,2]>=0.001] pos <- which( colnames(asthma) %in% snps.ok, useNames = FALSE) asthma.s <- setupSNP(asthma, pos, sep=\"\")"},{"path":"/articles/SNPassoc.html","id":"snp-association-analysis","dir":"Articles","previous_headings":"","what":"SNP association analysis","title":"SNPassoc: an R package to perform whole genome association studies","text":"interested finding SNPs associated asthma status encoded variable casecontrol. first illustrate association case-control status SNP rs1422993. association analysis genetic models performed function association regresses casecontrol variable rs1422993 dataset asthma.s already contains SNP variables class snp. function association follows usual syntax R modelling functions difference variables model class snp tested using different genetic models. example, observe genetic models recessive one statistically significant. association also fits overdominant model, compares two homozygous genotypes versus heterozygous one. genetic model inheritance biologically rare although linked sickle cell anemia humans. result table describes number individuals genotype across cases controls. ORs CI-95% also computed. last column describes AIC (Akaike information criteria) can used decide best model inheritance; lower better model . example, one may conclude rs1422993 associated asthma , instance, risk asthmatic 39% higher people least one alternative allele (T) respect individuals none (dominant model). risk statistically significant since CI-95% contain 1, P-value 0.0078<0.022, P-value max-statistics 0.01 expected model inheritance hypothesized, association analysis model can specified argument model, default test models, Association tests typically adjusted covariates, incorporated model usual form ORs stratified analysis given categorical covariates used verify whether risk constant across groups can see, instance, dominant model significant males. subset argument allows fitting model subgroup individuals analyses can also performed quantitative traits, body mass index, since association function automatically selects error distribution regression analysis (either Gaussian binomial). BMI, association tests whether difference means statistically significant, rather computing . multiple SNP data, objective identify variants significantly associated trait. basic strategy , therefore, fit association test like one described SNPs dataset determine associations significant. massive univariate testing widely used analysis method omic data simplicity. SNPassoc, type analysis done function WGassociation , outcome required formula argument (first argument) since function successively calls association variables class snp within data. function returns P-values association SNP genetic model. Covariates can also introduced model SNPassoc computationally limited large genomic data. computing time can reduced parallelization, specifying argument mc.cores number computing cores used. Alternatively, function scanWGassociation, C compiled function, can used compute predetermined genetic model across SNPs, passed argument model, default additive model NOTE: function available SNPassoc version available CRAN. user can install development version available GitHub get access function just executing P-values obtained massive univariate analyses visualized generic plot function Manhattan-type plots different genetic models. P-values -log10 scale assess association case-control status SNPs asthma example. produces Manhattan plot -log10(P-values) SNPs models. shows nominal level significance Bonferroni level, level corrected multiple testing across SNPs. overall hypothesis massive univariate association tests whether SNP significantly associated phenotype. multiple SNPs tested, probability finding least one significant finding increases lower significance threshold. Bonferroni correction lowers threshold number SNPs tested (0.0001=0.05/51). Manhattan plotof analysis, see SNP significant Bonferroni level, therefore SNP significantly associated asthma. Maximum-statistic (see González et al. (2008)) can also used test association asthma status SNPs note even max-statistics none SNPs tested significant Bonferroni correction (<0.0001) multiple SNP testing Information specific association models given SNPs can also retrieved WGstats Therefore, can access results given SNP recovering previous results given association function. NOTE: R output specific association analyses can exported LaTeX using getNiceTable function xtable R package. following code creates table SNPs rs1422993 rs184448","code":"association(casecontrol ~ rs1422993, data = asthma.s) SNP: rs1422993  adjusted by:                  0    %   1    %   OR lower upper  p-value  AIC Codominant                                                     G/G           730 59.0 173 50.9 1.00             0.017768 1642 G/T           425 34.3 145 42.6 1.44  1.12  1.85               T/T            83  6.7  22  6.5 1.12  0.68  1.84               Dominant                                                       G/G           730 59.0 173 50.9 1.00             0.007826 1642 G/T-T/T       508 41.0 167 49.1 1.39  1.09  1.77               Recessive                                                      G/G-G/T      1155 93.3 318 93.5 1.00             0.877863 1649 T/T            83  6.7  22  6.5 0.96  0.59  1.57               Overdominant                                                   G/G-T/T       813 65.7 195 57.4 1.00             0.005026 1641 G/T           425 34.3 145 42.6 1.42  1.11  1.82               log-Additive                                                   0,1,2        1238 78.5 340 21.5 1.22  1.01  1.47 0.040151 1644 maxstat(asthma.s$casecontrol, asthma.s$rs1422993) dominant recessive log-additive MAX-statistic Pr(>z)   [1,]    7.073     0.024        4.291         7.073 0.0143 * --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 association(casecontrol ~ rs1422993, asthma.s, model=\"dominant\") SNP: rs1422993  adjusted by:             0  %   1    %   OR lower upper  p-value  AIC Dominant                                                G/G      730 59 173 50.9 1.00             0.007826 1642 G/T-T/T  508 41 167 49.1 1.39  1.09  1.77 association(casecontrol ~ rs1422993 + country + smoke, asthma.s) SNP: rs1422993  adjusted by: country smoke                  0    %   1    %   OR lower upper p-value  AIC Codominant                                                    G/G           728 59.1 173 51.0 1.00             0.06940 1408 G/T           423 34.3 144 42.5 1.38  1.05  1.82              T/T            81  6.6  22  6.5 1.06  0.61  1.85              Dominant                                                      G/G           728 59.1 173 51.0 1.00             0.03429 1407 G/T-T/T       504 40.9 166 49.0 1.33  1.02  1.73              Recessive                                                     G/G-G/T      1151 93.4 317 93.5 1.00             0.79338 1411 T/T            81  6.6  22  6.5 0.93  0.54  1.60              Overdominant                                                  G/G-T/T       809 65.7 195 57.5 1.00             0.02147 1406 G/T           423 34.3 144 42.5 1.37  1.05  1.80              log-Additive                                                  0,1,2        1232 78.4 339 21.6 1.19  0.96  1.46 0.11191 1409 association(casecontrol ~ rs1422993 + survival::strata(gender), asthma.s) SNP: rs1422993  adjusted by: survival::strata(gender)                  0    %   1    %   OR lower upper  p-value  AIC Codominant                                                     G/G           730 59.0 173 50.9 1.00             0.022940 1634 G/T           425 34.3 145 42.6 1.42  1.11  1.83               T/T            83  6.7  22  6.5 1.09  0.66  1.80               Dominant                                                       G/G           730 59.0 173 50.9 1.00             0.011144 1633 G/T-T/T       508 41.0 167 49.1 1.37  1.07  1.74               Recessive                                                      G/G-G/T      1155 93.3 318 93.5 1.00             0.805330 1640 T/T            83  6.7  22  6.5 0.94  0.58  1.53               Overdominant                                                   G/G-T/T       813 65.7 195 57.4 1.00             0.006378 1632 G/T           425 34.3 145 42.6 1.41  1.10  1.80               log-Additive                                                   0,1,2        1238 78.5 340 21.5 1.21  1.00  1.46 0.055231 1636 association(casecontrol ~ rs1422993, asthma.s,                  subset=country==\"Spain\") SNP: rs1422993  adjusted by:                 0    %  1    %   OR lower upper p-value   AIC Codominant                                                   G/G          179 54.6 22 44.9 1.00              0.3550 295.2 G/T          125 38.1 24 49.0 1.56  0.84  2.91               T/T           24  7.3  3  6.1 1.02  0.28  3.66               Dominant                                                     G/G          179 54.6 22 44.9 1.00              0.2059 293.7 G/T-T/T      149 45.4 27 55.1 1.47  0.81  2.70               Recessive                                                    G/G-G/T      304 92.7 46 93.9 1.00              0.7576 295.2 T/T           24  7.3  3  6.1 0.83  0.24  2.85               Overdominant                                                 G/G-T/T      203 61.9 25 51.0 1.00              0.1502 293.2 G/T          125 38.1 24 49.0 1.56  0.85  2.85               log-Additive                                                 0,1,2        328 87.0 49 13.0 1.23  0.77  1.96  0.3816 294.5 association(bmi ~ rs1422993, asthma.s) SNP: rs1422993  adjusted by:                  n    me     se       dif   lower  upper p-value  AIC Codominant                                                           G/G           896 25.53 0.1446  0.000000                 0.9069 9069 G/T           565 25.50 0.1834 -0.027059 -0.4874 0.4332              T/T           105 25.71 0.4676  0.178076 -0.7057 1.0619              Dominant                                                             G/G           896 25.53 0.1446  0.000000                 0.9818 9067 G/T-T/T       670 25.54 0.1710  0.005089 -0.4324 0.4426              Recessive                                                            G/G-G/T      1461 25.52 0.1135  0.000000                 0.6694 9067 T/T           105 25.71 0.4676  0.188540 -0.6769 1.0540              Overdominant                                                         G/G-T/T      1001 25.55 0.1383  0.000000                 0.8424 9067 G/T           565 25.50 0.1834 -0.045739 -0.4965 0.4050              log-Additive                                                         0,1,2                           0.033951 -0.3153 0.3832  0.8489 9067 ans <- WGassociation(casecontrol, data=asthma.s) head(ans) comments codominant dominant recessive overdominant log-additive rs4490198         -    0.52765  0.29503   0.96400      0.29998      0.49506 rs4849332         -    0.96912  0.92986   0.84806      0.82327      0.97049 rs1367179         -    0.62775  0.59205   0.35786      0.86419      0.43994 rs11123242        -    0.68622  0.67596   0.39801      0.92878      0.52009 rs13014858        -    0.52578  0.26739   0.88011      0.34966      0.40897 rs1430094         -    0.13375  0.10569   0.54432      0.04490      0.36611 ans.adj <- WGassociation(casecontrol ~ country + smoke, asthma.s) head(ans.adj) ans.fast <- scanWGassociation(casecontrol, asthma.s) devtools::install_github(\"isglobal-brge/SNPassoc\") plot(ans) ans.max <- maxstat(asthma.s, casecontrol) ans.max dominant recessive log-additive MAX-statistic  Pr(>z)    rs4490198     1.097     0.002        0.466         1.097 0.50210    rs4849332     0.008     0.037        0.001         0.037 0.97653    rs1367179     0.287     0.845        0.602         0.845 0.58995    rs11123242    0.175     0.714        0.417         0.714 0.63913    rs13014858    1.230     0.023        0.683         1.230 0.46374    rs1430094     2.617     0.368        0.821         2.617 0.20637    rs1430093     1.051     0.042        0.743         1.051 0.51935    rs746710      0.728     0.679        1.051         1.051 0.51552    rs1430090     0.172     0.463        0.000         0.463 0.74251    rs6737251     0.143     0.156        0.217         0.217 0.86927    rs11685217    0.894     0.030        0.705         0.894 0.56868    rs1430097     0.003     0.183        0.029         0.183 0.88817    rs10496465    0.003     0.020        0.008         0.020 0.98746    rs3756688     0.016     0.738        0.266         0.738 0.62552    rs2303063     0.060     1.271        0.658         1.271 0.45352    rs1422993     7.073     0.024        4.291         7.073 0.01435 *  rs2400478     1.662     0.056        1.055         1.662 0.35861    rs714588      0.659     0.061        0.150         0.659 0.65844    rs1023555     0.221     0.104        0.261         0.261 0.84669    rs898070      0.020     1.794        0.346         1.794 0.33051    rs963218      0.165     0.190        0.263         0.263 0.84348    rs1419835     1.084     0.775        0.295         1.084 0.51065    rs765023      1.959     0.526        0.483         1.959 0.30221    rs1345267     2.582     0.003        1.383         2.582 0.21190    rs324381      0.175     0.402        0.377         0.402 0.77509    rs184448      9.710     2.026        8.253         9.710 0.00303 ** rs324396      2.312     0.188        1.051         2.312 0.24695    rs324957      7.598     2.134        7.157         7.598 0.01405 *  rs324960      2.901     7.928        6.443         7.928 0.01135 *  rs10486657    0.054     0.500        0.001         0.500 0.73011    rs324981      3.168     2.431        4.270         4.270 0.08118 .  rs1419780     0.123     1.193        0.005         1.193 0.47745    rs325462      1.545     1.645        2.412         2.412 0.23122    rs727162      3.022     0.643        3.074         3.074 0.16054    rs10250709    0.737     0.007        0.360         0.737 0.62823    rs6958905     0.490     0.099        0.447         0.490 0.73247    rs10238983    0.094     0.692        0.328         0.692 0.64741    rs4941643     1.294     0.006        0.465         1.294 0.44617    rs3794381     0.127     0.998        0.489         0.998 0.53592    rs2031532     0.025     0.240        0.127         0.240 0.85706    rs2247119     0.379     0.000        0.229         0.379 0.78481    rs8000149     0.020     0.043        0.043         0.043 0.97255    rs2274276     0.005     0.034        0.023         0.034 0.97747    rs7332573     1.247     1.703        1.825         1.825 0.32938    rs3829366     1.137     0.448        0.069         1.137 0.49137    rs6084432     2.999     0.848        3.279         3.279 0.14324    rs512625      2.180     0.030        1.119         2.180 0.26537    rs3918395     0.903     0.414        0.455         0.903 0.57180    rs2787095     0.178     0.069        0.184         0.184 0.88696    rs2853215     0.686     0.931        1.130         1.130 0.49224    --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #minimum P-value across SNPs min(ans.max[\"Pr(>z)\",]) [1] 0.003029431 infoTable <- WGstats(ans) infoTable$rs1422993 SNP: rs1422993  adjusted by:                  0    %   1    %   OR lower upper  p-value  AIC Codominant                                                     G/G           730 59.0 173 50.9 1.00             0.017768 1642 G/T           425 34.3 145 42.6 1.44  1.12  1.85               T/T            83  6.7  22  6.5 1.12  0.68  1.84               Dominant                                                       G/G           730 59.0 173 50.9 1.00             0.007826 1642 G/T-T/T       508 41.0 167 49.1 1.39  1.09  1.77               Recessive                                                      G/G-G/T      1155 93.3 318 93.5 1.00             0.877863 1649 T/T            83  6.7  22  6.5 0.96  0.59  1.57               Overdominant                                                   G/G-T/T       813 65.7 195 57.4 1.00             0.005026 1641 G/T           425 34.3 145 42.6 1.42  1.11  1.82               log-Additive                                                   0,1,2        1238 78.5 340 21.5 1.22  1.01  1.47 0.040151 1644 library(xtable) out <- getNiceTable(ans[c(\"rs1422993\", \"rs184448\")])  nlines <- attr(out, \"nlines\") hlines <- c(-1, -1, 0, cumsum(nlines+1), nrow(out), nrow(out))  print(xtable(out, caption='Genetic association using                 different genetic models from asthma                  data example of rs1422993 and rs184448                  SNPs obtained with SNPassoc.',              label = 'tab-2SNPs'),       tabular.enviroment=\"longtable\", file=\"tableSNPs\",       floating=FALSE,  include.rownames = FALSE,        hline.after= hlines, sanitize.text.function=identity)"},{"path":"/articles/SNPassoc.html","id":"gene-environment-and-gene-gene-interactions","dir":"Articles","previous_headings":"","what":"Gene-environment and gene-gene interactions","title":"SNPassoc: an R package to perform whole genome association studies","text":"Gene-enviroment (GxE) analyses can performed within SNPassoc using association function. Assume interested testing whether risk rs1422993 asthma dominant model different among smokers (variable smoke; 0=never, 1=ever). code fits model interaction term environmental variable required factor factor variable. result interaction table showing risk individuals carrying T allele increases risk asthma never smokers (=1.35; CI: 1.02-1.79) significant ever smokers (=0.95; CI: 0.63-1.42). However, interaction statistically significant (\\(P\\)-interaction=0.8513). output also shows stratified ORs can help interpreting results. similar way, gene-gene interaction (GxG) given SNP epistasis model can also fitted using function. case, genetic model interacting SNP must indicated model.inteaction argument. observe interaction two SNPs statistically significant (P-value=0.24). However, GG genotype rs184448 differs across individuals GG GT-TT genotypes rs1422993 (see ORs GG second table output). user also can perform GxG set SNPs using code. Let us assume interested assessing interaction SNPs significant 10% level can visualize results Interaction plot. Interaction plot SNPs significant al 10% significant level (see help ‘interactionPval’ function see represented plot).","code":"association(casecontrol ~ dominant(rs1422993)*factor(smoke),              data=asthma.s) SNP: dominant(rs1422993  adjusted by:   Interaction  ---------------------           0       OR lower upper   1      OR lower upper G/G     486 130 1.00    NA    NA 242 43 0.66  0.46  0.97 G/T-T/T 354 128 1.35  1.02  1.79 150 38 0.95  0.63  1.42  p interaction: 0.8513    factor(smoke) within dominant(rs1422993  --------------------- G/G      0   1   OR lower upper 0 486 130 1.00    NA    NA 1 242  43 0.66  0.46  0.97  G/T-T/T      0   1  OR lower upper 0 354 128 1.0    NA    NA 1 150  38 0.7  0.47  1.06  p trend: 0.8513    dominant(rs1422993 within factor(smoke)  --------------------- 0            0   1   OR lower upper G/G     486 130 1.00    NA    NA G/T-T/T 354 128 1.35  1.02  1.79  1            0  1   OR lower upper G/G     242 43 1.00    NA    NA G/T-T/T 150 38 1.43  0.88  2.31  p trend: 0.8513 association(casecontrol ~ rs1422993*factor(rs184448),              data=asthma.s, model.interaction = \"dominant\" ) SNP: rs1422993  adjusted by:   Interaction  ---------------------         T/T      OR lower upper T/G      OR lower upper   0  1  G/G lower upper G/G     227 43 1.00    NA    NA 359 96 1.41  0.95  2.10 128 30 1.24  0.74  2.07 G/T-T/T 154 33 1.13  0.69  1.86 265 93 1.85  1.24  2.77  78 38 2.57  1.55  4.27  p interaction: 0.24499    factor(rs184448) within rs1422993  --------------------- G/G        0  1   OR lower upper T/T 227 43 1.00    NA    NA T/G 359 96 1.41  0.95  2.10 G/G 128 30 1.24  0.74  2.07  G/T-T/T        0  1   OR lower upper T/T 154 33 1.00    NA    NA T/G 265 93 1.64  1.05  2.55 G/G  78 38 2.27  1.32  3.90  p trend: 0.24499    rs1422993 within factor(rs184448)  --------------------- T/T            0  1   OR lower upper G/G     227 43 1.00    NA    NA G/T-T/T 154 33 1.13  0.69  1.86  T/G            0  1   OR lower upper G/G     359 96 1.00    NA    NA G/T-T/T 265 93 1.31  0.95  1.82  G/G            0  1   OR lower upper G/G     128 30 1.00    NA    NA G/T-T/T  78 38 2.08  1.19  3.62  p trend: 0.12743 ans <- WGassociation(casecontrol, data=asthma.s) mask <- apply(ans, 1, function(x) min(x, na.rm=TRUE)<0.1) sig.snps <- names(mask[mask]) sig.snps [1] \"rs1430094\" \"rs1422993\" \"rs765023\"  \"rs184448\"  \"rs324396\"  \"rs324957\"   [7] \"rs324960\"  \"rs324981\"  \"rs727162\"  \"rs6084432\" idx <- which(colnames(asthma)%in%sig.snps) asthma.s2 <- setupSNP(asthma, colSNPs = idx, sep=\"\") ans.int <- interactionPval(casecontrol ~ 1, data=asthma.s2) ans.int rs1430094   rs1422993    rs765023    rs184448    rs324396 rs1430094 0.132526514 0.653457029 0.816154586 0.787386835 0.694311497 rs1422993 0.140433948 0.016719949 0.133131712 0.375246182 0.683959376 rs765023  0.171993821 0.144029395 0.182805988 0.961405419 0.194520134 rs184448  0.100074594 0.019963426 0.034666219 0.007969948 0.036825613 rs324396  0.204742661 0.190583402 0.131945703 0.344952544 0.209589962 rs324957  0.103680541 0.019820456 0.034446832 0.696623215 0.318903026 rs324960  0.107216765 0.024180405 0.174801032 0.291457716 0.584132142 rs324981  0.128489057 0.144077239 0.153521356 0.646139555 0.301782199 rs727162  0.258828613 0.240900610 0.188971595 0.173341993 0.120240909 rs6084432 0.214413938 0.187372912 0.187830183 0.264160389 0.252965105              rs324957    rs324960    rs324981    rs727162   rs6084432 rs1430094 0.644661690 0.096913557 0.774083175 0.043758067 0.946641185 rs1422993 0.257661509 0.175946789 0.095251421 0.577504655 0.027437424 rs765023  0.437535350 0.614095008 0.117705086 0.217580773 0.896707843 rs184448  0.018290318 0.356124918 0.311031078 0.297592380 0.349332875 rs324396  0.232076552 0.747574191 0.064231657 0.361336095 0.388626207 rs324957  0.019578585 0.595796247 0.965290164 0.402781904 0.272919867 rs324960  0.404830873 0.017401694 0.168077057 0.406220478 0.725774374 rs324981  0.657378128 0.533095852 0.117043376 0.463436271 0.862291944 rs727162  0.174960014 0.500811687 0.167364803 0.206131411 0.885294485 rs6084432 0.174006927 0.146808311 0.210647392 0.203957720 0.193711884 plot(ans.int)"},{"path":"/articles/SNPassoc.html","id":"haplotype-analysis","dir":"Articles","previous_headings":"","what":"Haplotype analysis","title":"SNPassoc: an R package to perform whole genome association studies","text":"Genetic association studies can extended single SNP associations haplotype associations. Several examples including different complex diseases can found . alleles naturally occur haplotypes, belong chromosomes, phase, knowledge chromosome allele belongs lost genotyping process. genotype measured different probe phase alleles chromosome broken. Consider instance individual one chromosome alleles T two different loci alleles G C second chromosome. individual’s genotypes individual two loci /G T/C, genotypes another individual alleles C one chromosome G T second chromosome. Clearly, pair -T confers risk disease, subject one risk subject two , despite genotypes. unequivocal method resolving phase ambiguity sequencing chromosomes individuals. However, given correlational structure SNPs, possible estimate probability particular haplotype subject. can done genetic association study number cases controls genotyped. numerous methods infer unobserved haplotypes, two popular maximum likelihood, implemented via expectation-maximization (EM) algorithm , parsimony method . Recent methods based Bayesian models also proposed . addition, haplotypes inferences carry uncertainty, considered association analyses.","code":""},{"path":"/articles/SNPassoc.html","id":"haplotype-estimation","dir":"Articles","previous_headings":"Haplotype analysis","what":"Haplotype estimation","title":"SNPassoc: an R package to perform whole genome association studies","text":"now illustrate perform haplotype estimation genotype data using EM algorithm integrate haplotype uncertainty evaluating association traits haplotypes. Haplotype inference performed haplo.stats, genotypes encoded different format. make.geno, SNPassoc, formats data haplo.stats. function haplo.em computes haplotype frequency data SNPs interest. illustrate estimate haplotypes built SNPs rs714588, rs1023555 rs898070: Coding common variant alleles 1 2, can see 8 possible haplotypes across subjects listed estimated haplotype frequency. Clearly, haplotypes equally probable, expected high LD SNPs. particular, observe haplotypes 4 7 probable, accumulating 65% haplotype sample. haplo.em estimates subject probability given haplotype subject’s chromosomes.","code":"library(haplo.stats) snpsH <- c(\"rs714588\", \"rs1023555\",  \"rs898070\") genoH <- make.geno(asthma.s, snpsH) em <- haplo.em(genoH, locus.label = snpsH, miss.val = c(0, NA)) em ================================================================================                                     Haplotypes                                     ================================================================================    rs714588 rs1023555 rs898070 hap.freq 1        1         1        1  0.04090 2        1         1        2  0.02439 3        1         2        1  0.04265 4        1         2        2  0.44047 5        2         1        1  0.08271 6        2         1        2  0.08403 7        2         2        1  0.20794 8        2         2        2  0.07691 ================================================================================                                      Details                                       ================================================================================  lnlike =  -4102.691  lr stat for no LD =  774.5411 , df =  4 , p-val =  0"},{"path":"/articles/SNPassoc.html","id":"haplotype-association","dir":"Articles","previous_headings":"Haplotype analysis","what":"Haplotype association","title":"SNPassoc: an R package to perform whole genome association studies","text":"want assess haplotypes significantly associates asthma. haplo.glm fits regression model phenotype haplotypes, incorporating uncertainty probable haplotypes individuals. function intervals SNPassoc provides nice summary results haplo.glm fits logistic regression model asthma status (trait - NOTE: must 0/1 variable) inferred haplotypes (genoH), names SNPs allele names passed locus.label allele.lev arguments, haplotypes least 5% frequency considered. result, obtain haplotype significance P-value, respect common haplotype (ATG 44% frequency). particular, analysis, see haplotype significantly associated asthma.","code":"trait <- asthma.s$casecontrol mod <- haplo.glm(trait ~ genoH,                             family=\"binomial\",                   locus.label=snpsH,                  allele.lev=attributes(genoH)$unique.alleles,                  control = haplo.glm.control(haplo.freq.min=0.05))    intervals(mod) freq   or   95%   C.I.   P-val           ATG 0.4405   1.00 Reference haplotype           GAA 0.0827   1.09 (   0.77 -   1.56 )  0.6160           GAG 0.0841   0.99 (   0.69 -   1.42 )  0.9642           GTA 0.2080   1.06 (   0.84 -   1.34 )  0.6379           GTG 0.0769   1.09 (   0.76 -   1.58 )  0.6367    genoH.rare 0.1079   1.15 (   0.83 -   1.59 )  0.3968"},{"path":"/articles/SNPassoc.html","id":"sliding-window-approach","dir":"Articles","previous_headings":"Haplotype analysis","what":"Sliding window approach","title":"SNPassoc: an R package to perform whole genome association studies","text":"inference haplotypes depends predefined region sets SNPs. instance, last section, selected three SNPs high LD. However, previous knowledge available region SNPs haplotypes inferred, can apply sliding window haplotype inference . illustrate type analysis, now consider second block 10 SNPs asthma example (6th 15th SNP). Considering large haplotypes, however, increases number possible haplotypes sample, decreasing power finding real associations. addition, predefined blocks, possible miss efficient length susceptible haplotype, incrementing loss power. overcome using sliding window. thus ask haplotype combination 4, 5, 6 7 consecutive SNPs gives highest association asthma status. reformat SNP genotypes region make.geno function perform association analysis multiple haplotypes SNPs sliding 6th 15th SNP data. perform analysis window length varying 4 7 SNPs. results can visualized following plot Sliding window approach. Results obtained varying haplotype size 4 7 6th 15th SNP asthma data example observe highest -log10(P-value) obtained haplotype 4 SNP length starting 4th SNP selected SNPs. deciding best combination SNPs, haplotype association asthma can estimated , observe individuals carrying haplotype GCAC 53% increased risk asthma relative reference haplotype TCGT (=1.53, p=0.0021). haplotype GTCA also significantly associated disease (p=0.0379). likelihood ratio test haplotype status can extracted results haplo.glme function: can also test association asthma haplotype adjusted smoking status","code":"snpsH2 <- labels(asthma.s)[6:15] genoH2 <- make.geno(asthma.s, snpsH2) haplo.score <- list() for (i in 4:7) {  trait <- asthma.s$casecontrol  haplo.score[[i-3]] <- haplo.score.slide(trait, genoH2,                            trait.type=\"binomial\",                           n.slide=i,                           simulate=TRUE,                           sim.control=score.sim.control(min.sim=100,                                        max.sim=200))   } par(mfrow=c(2,2)) for (i in 4:7) {     plot(haplo.score[[i-3]])     title(paste(\"Sliding Window=\", i, sep=\"\"))  } snpsH3 <- snpsH2[4:7] genoH3 <- make.geno(asthma.s, snpsH3) mod <- haplo.glm(trait~genoH3,                             family=\"binomial\",                   locus.label=snpsH3,                  allele.lev=attributes(genoH3)$unique.alleles,                  control = haplo.glm.control(haplo.freq.min=0.05))       intervals(mod) freq   or   95%   C.I.   P-val          TCCC 0.3521   1.00 Reference haplotype          GCCC 0.2963   1.01 (   0.82 -   1.24 )  0.9495          TTCA 0.1184   0.89 (   0.67 -   1.20 )  0.4433          TTTA 0.1830   1.12 (   0.87 -   1.43 )  0.3796   genoH3.rare 0.0502   0.78 (   0.50 -   1.22 )  0.2750 lrt <- mod$lrt pchisq(lrt$lrt, lrt$df, lower=FALSE) [1] 0.5044641 smoke <- asthma.s$smoke mod.adj.ref <- glm(trait ~ smoke, family=\"binomial\") mod.adj <- haplo.glm(trait ~ genoH3 + smoke ,                             family=\"binomial\",                   locus.label=snpsH3,                  allele.lev=attributes(genoH3)$unique.alleles,                  control = haplo.glm.control(haplo.freq.min=0.05))  lrt.adj <- mod.adj.ref$deviance - mod.adj$deviance pchisq(lrt.adj, mod.adj$lrt$df, lower=FALSE) [1] 0.6457956"},{"path":"/articles/SNPassoc.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"SNPassoc: an R package to perform whole genome association studies","text":"","code":"sessionInfo() R version 4.2.1 (2022-06-23 ucrt) Platform: x86_64-w64-mingw32/x64 (64-bit) Running under: Windows 10 x64 (build 19044)  Matrix products: default  locale: [1] LC_COLLATE=Spanish_Spain.utf8  LC_CTYPE=Spanish_Spain.utf8    [3] LC_MONETARY=Spanish_Spain.utf8 LC_NUMERIC=C                   [5] LC_TIME=Spanish_Spain.utf8      attached base packages: [1] stats     graphics  grDevices utils     datasets  methods   base       other attached packages: [1] haplo.stats_1.8.9 arsenal_3.6.3     SNPassoc_2.0-17   BiocStyle_2.24.0   loaded via a namespace (and not attached):   [1] backports_1.4.1                           [2] Hmisc_4.7-1                               [3] BiocFileCache_2.4.0                       [4] systemfonts_1.0.4                         [5] plyr_1.8.7                                [6] splines_4.2.1                             [7] BiocParallel_1.30.4                       [8] GenomeInfoDb_1.32.4                       [9] ggplot2_3.3.6                            [10] TH.data_1.1-1                            [11] digest_0.6.29                            [12] htmltools_0.5.3                          [13] fansi_1.0.3                              [14] magrittr_2.0.3                           [15] checkmate_2.1.0                          [16] memoise_2.0.1                            [17] BSgenome_1.64.0                          [18] cluster_2.1.4                            [19] Biostrings_2.64.1                        [20] matrixStats_0.62.0                       [21] sandwich_3.0-2                           [22] pkgdown_2.0.6                            [23] prettyunits_1.1.1                        [24] jpeg_0.1-9                               [25] colorspace_2.0-3                         [26] blob_1.2.3                               [27] rappdirs_0.3.3                           [28] textshaping_0.3.6                        [29] xfun_0.33                                [30] dplyr_1.0.10                             [31] crayon_1.5.2                             [32] RCurl_1.98-1.9                           [33] jsonlite_1.8.2                           [34] TxDb.Hsapiens.UCSC.hg19.knownGene_3.2.2  [35] survival_3.4-0                           [36] VariantAnnotation_1.42.1                 [37] zoo_1.8-11                               [38] glue_1.6.2                               [39] poisbinom_1.0.1                          [40] gtable_0.3.1                             [41] zlibbioc_1.42.0                          [42] XVector_0.36.0                           [43] MatrixModels_0.5-1                       [44] DelayedArray_0.22.0                      [45] rms_6.3-0                                [46] BiocGenerics_0.42.0                      [47] SparseM_1.81                             [48] scales_1.2.1                             [49] mvtnorm_1.1-3                            [50] DBI_1.1.3                                [51] Rcpp_1.0.9                               [52] progress_1.2.2                           [53] htmlTable_2.4.1                          [54] foreign_0.8-83                           [55] bit_4.0.4                                [56] Formula_1.2-4                            [57] stats4_4.2.1                             [58] htmlwidgets_1.5.4                        [59] httr_1.4.4                               [60] RColorBrewer_1.1-3                       [61] ellipsis_0.3.2                           [62] farver_2.1.1                             [63] pkgconfig_2.0.3                          [64] XML_3.99-0.11                            [65] nnet_7.3-18                              [66] sass_0.4.2                               [67] dbplyr_2.2.1                             [68] deldir_1.0-6                             [69] utf8_1.2.2                               [70] labeling_0.4.2                           [71] tidyselect_1.2.0                         [72] rlang_1.0.6                              [73] AnnotationDbi_1.58.0                     [74] munsell_0.5.0                            [75] tools_4.2.1                              [76] cachem_1.0.6                             [77] cli_3.4.1                                [78] generics_0.1.3                           [79] RSQLite_2.2.18                           [80] evaluate_0.17                            [81] stringr_1.4.1                            [82] fastmap_1.1.0                            [83] yaml_2.3.5                               [84] ragg_1.2.3                               [85] org.Hs.eg.db_3.15.0                      [86] knitr_1.40                               [87] bit64_4.0.5                              [88] fs_1.5.2                                 [89] purrr_0.3.5                              [90] KEGGREST_1.36.3                          [91] nlme_3.1-160                             [92] quantreg_5.94                            [93] xml2_1.3.3                               [94] biomaRt_2.52.0                           [95] compiler_4.2.1                           [96] rstudioapi_0.14                          [97] filelock_1.0.2                           [98] curl_4.3.3                               [99] png_0.1-7                               [100] tibble_3.1.8                            [101] bslib_0.4.0                             [102] stringi_1.7.8                           [103] highr_0.9                               [104] GenomicFeatures_1.48.4                  [105] desc_1.4.2                              [106] lattice_0.20-45                         [107] Matrix_1.5-1                            [108] vctrs_0.4.2                             [109] pillar_1.8.1                            [110] lifecycle_1.0.3                         [111] BiocManager_1.30.18                     [112] jquerylib_0.1.4                         [113] data.table_1.14.4                       [114] bitops_1.0-7                            [115] rtracklayer_1.56.1                      [116] GenomicRanges_1.48.0                    [117] R6_2.5.1                                [118] BiocIO_1.6.0                            [119] latticeExtra_0.6-30                     [120] bookdown_0.29                           [121] gridExtra_2.3                           [122] IRanges_2.30.1                          [123] codetools_0.2-18                        [124] polspline_1.1.20                        [125] MASS_7.3-58.1                           [126] assertthat_0.2.1                        [127] SummarizedExperiment_1.26.1             [128] rjson_0.2.21                            [129] rprojroot_2.0.3                         [130] withr_2.5.0                             [131] GenomicAlignments_1.32.1                [132] Rsamtools_2.12.0                        [133] multcomp_1.4-20                         [134] S4Vectors_0.34.0                        [135] GenomeInfoDbData_1.2.8                  [136] parallel_4.2.1                          [137] hms_1.1.2                               [138] grid_4.2.1                              [139] rpart_4.1.16                            [140] tidyr_1.2.1                             [141] rmarkdown_2.17                          [142] MatrixGenerics_1.8.1                    [143] Biobase_2.56.0                          [144] base64enc_0.1-3                         [145] restfulr_0.0.15                         [146] interp_1.1-3"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Victor Moreno. Author. Juan R Gonzalez. Author. Dolors Pelegri. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moreno V, Gonzalez J, Pelegri D (2022). SNPassoc: SNPs-Based Whole Genome Association Studies. R package version 2.0-17, https://github.com/isglobal-brge/SNPassoc.","code":"@Manual{,   title = {SNPassoc: SNPs-Based Whole Genome Association Studies},   author = {Victor Moreno and Juan R Gonzalez and Dolors Pelegri},   year = {2022},   note = {R package version 2.0-17},   url = {https://github.com/isglobal-brge/SNPassoc}, }"},{"path":"/index.html","id":"snpassoc","dir":"","previous_headings":"","what":"SNPs-Based Whole Genome Association Studies","title":"SNPs-Based Whole Genome Association Studies","text":"package carries common analysis performing whole genome association studies. analyses include descriptive statistics exploratory analysis missing values, calculation Hardy-Weinberg equilibrium, analysis association based generalized linear models (either quantitative binary traits), analysis multiple SNPs (haplotype epistasis analysis). Permutation test related tests (sum statistic truncated product) also implemented. Max-statistic genetic risk-allele score exact distributions also possible estimated.","code":""},{"path":"/reference/association.html","id":null,"dir":"Reference","previous_headings":"","what":"Association analysis between a single SNP and a given phenotype — association","title":"Association analysis between a single SNP and a given phenotype — association","text":"function carries association analysis single SNP   dependent variable (phenotype) five different genetic models (inheritance patterns):    codominant, dominant, recessive, overdominant log-additive. phenotype may quantitative    categorical. second case (e.g. case-control studies) variable must class 'factor'    two levels.","code":""},{"path":"/reference/association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Association analysis between a single SNP and a given phenotype — association","text":"","code":"association(formula, data, model=c(\"all\"), model.interaction=        c(\"codominant\"), subset, name.snp = NULL, quantitative =         is.quantitative(formula,data), genotypingRate= 0,         level = 0.95, ...)"},{"path":"/reference/association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Association analysis between a single SNP and a given phenotype — association","text":"formula symbolic description model fited (formula object).                  might either continuous variable (quantitative traits)                  factor variable (case-control studies) response left ~                  operator term corresponding SNP right. term must                 class snp (e.g. ~snp(var), var given SNP),                  required. Terms additional covariates right ~ operator may                  added fit adjusted model (e.g., ~var1+var2+...+varN+SNP). formula                  allows incorporate one object class snp. case,                  analysis done first SNP appears formula adjusted others                  covariates additional SNPs. data required dataframe class 'setupSNP' containing variables model. model character string specifying type genetic model (mode inheritance) SNP.                 indicates genotypes collapsed. Possible                values \"codominant\", \"dominant\", \"recessive\", \"overdominant\", \"additive\" \"\". default                \"\" fits 5 possible genetic models. first words required, e.g \"co\", \"\", etc. model.interaction character string specifying type genetic model (mode inheritance) assumed                            SNP included interaction term. Possible values \"codominant\",                             \"dominant\", \"recessive\", \"overdominant\". default \"codominant\". subset optional vector specifying subset observations used fitting process name.snp optional label SNP variable printed. quantitative logical value indicating whether phenotype (                      left operator ~ 'formula' argument) quantitative. function                        '.quantitative' returns FALSE phenotype                       variable two categories (.e. indicating case-control status). Thus,                       required argument may modified user. genotypingRate minimum percentage genotype rate SNP analyzed.                   Default 0% (e.g. SNPs analyzed). parameter                   changed. used function 'WGassociation'. level signification level confidence intervals. ... arguments passed glm function","code":""},{"path":"/reference/association.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Association analysis between a single SNP and a given phenotype — association","text":"function called user interested analyzing unique SNP.   recommended use WGassociation function one SNP studied.","code":""},{"path":"/reference/association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Association analysis between a single SNP and a given phenotype — association","text":"genetic model (codominant, dominant, recessive, overdominant, log-additive) function gives    matrix sample size percentages genotype, Odds Ratio 95% confidence interval   (taking frequent homozygous genotype reference), p-value corresponding likelihood ratio test obtained    comparison null model, Akaike Information Criterion (AIC) genetic model. case    analyzing quantitative trait, function returns matrix sample size, mean standard errors genotype,    mean difference 95% confidence interval respect frequent homozygous genotype,    p-value obtained overall gene effect Akaike Information Criterion (AIC) genetic model. interaction term (categorical covariate SNP) included model, three different tables given.    first one correponds full interaction matrix ORs (mean differences quantitative trait analyzed)    expressed respect non variant genotype first category covariate. two tables show ORs    95% confidence intervals marginal models. P values interaction trend also showed output.","code":""},{"path":"/reference/association.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Association analysis between a single SNP and a given phenotype — association","text":"JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5. Iniesta R, Guino E, Moreno V. Statistical analysis genetic polymorphisms epidemiological studies. Gac Sanit. 2005;19(4):333-41. Elston RC. Introduction overview. Statistical methods genetic epidemiology. Stat Methods Med Res. 2000;9:527-41.","code":""},{"path":[]},{"path":"/reference/association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Association analysis between a single SNP and a given phenotype — association","text":"","code":"data(SNPs)  # first, we create an object of class 'setupSNP' datSNP<-setupSNP(SNPs,6:40,sep=\"\")  # case-control study, crude analysis association(casco~snp10001, data=datSNP) #>  #> SNP: snp10001  adjusted by:  #>               0    %   1    %   OR lower upper p-value   AIC #> Codominant                                                   #> T/T          24 51.1  68 61.8 1.00             0.13234 193.6 #> C/T          21 44.7  32 29.1 0.54  0.26  1.11               #> C/C           2  4.3  10  9.1 1.76  0.36  8.64               #> Dominant                                                     #> T/T          24 51.1  68 61.8 1.00             0.21184 194.1 #> C/T-C/C      23 48.9  42 38.2 0.64  0.32  1.28               #> Recessive                                                    #> T/T-C/T      45 95.7 100 90.9 1.00             0.27152 194.4 #> C/C           2  4.3  10  9.1 2.25  0.47 10.69               #> Overdominant                                                 #> T/T-C/C      26 55.3  78 70.9 1.00             0.06129 192.1 #> C/T          21 44.7  32 29.1 0.51  0.25  1.03               #> log-Additive                                                 #> 0,1,2        47 29.9 110 70.1 0.87  0.51  1.47 0.59448 195.4  # case-control study, adjusted by sex and arterial blood pressure association(casco~sex+snp10001+blood.pre, data=datSNP) #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #>  #> SNP: snp10001  adjusted by: sex blood.pre  #>               0    %   1    %   OR lower upper p-value   AIC #> Codominant                                                   #> T/T          24 51.1  68 61.8 1.00             0.15410 195.8 #> C/T          21 44.7  32 29.1 0.55  0.26  1.14               #> C/C           2  4.3  10  9.1 1.74  0.35  8.63               #> Dominant                                                     #> T/T          24 51.1  68 61.8 1.00             0.22859 196.1 #> C/T-C/C      23 48.9  42 38.2 0.65  0.32  1.31               #> Recessive                                                    #> T/T-C/T      45 95.7 100 90.9 1.00             0.28494 196.4 #> C/C           2  4.3  10  9.1 2.22  0.46 10.70               #> Overdominant                                                 #> T/T-C/C      26 55.3  78 70.9 1.00             0.07188 194.3 #> C/T          21 44.7  32 29.1 0.52  0.25  1.06               #> log-Additive                                                 #> 0,1,2        47 29.9 110 70.1 0.87  0.51  1.49 0.60861 197.3   # quantitative trait, crude analysis association(log(protein)~snp10001,data=datSNP) #>  #> SNP: snp10001  adjusted by:  #>                n     me      se     dif   lower    upper   p-value   AIC #> Codominant                                                               #> T/T           92 10.637 0.05630  0.0000                  0.0005068 316.1 #> C/T           53 10.351 0.10612 -0.2858 -0.5061 -0.06549                 #> C/C           12  9.929 0.24389 -0.7073 -1.0994 -0.31526                 #> Dominant                                                                 #> T/T           92 10.637 0.05630  0.0000                  0.0008307 318.2 #> C/T-C/C       65 10.273 0.09882 -0.3636 -0.5727 -0.15456                 #> Recessive                                                                #> T/T-C/T      145 10.532 0.05375  0.0000                  0.0028978 320.6 #> C/C           12  9.929 0.24389 -0.6029 -0.9933 -0.21246                 #> Overdominant                                                             #> T/T-C/C      104 10.555 0.06087  0.0000                  0.0752824 326.4 #> C/T           53 10.351 0.10612 -0.2042 -0.4276  0.01929                 #> log-Additive                                                             #> 0,1,2                           -0.3247 -0.4849 -0.16442 0.0001093 314.4 # quantitative trait, adjusted by sex association(log(protein)~snp10001+sex,data=datSNP) #> Warning: 'varlist' has changed (from nvar=2) to new 3 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 3 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 3 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 3 after EncodeVars() -- should no longer happen! #>  #> SNP: snp10001  adjusted by: sex  #>                n     me      se     dif   lower    upper   p-value   AIC #> Codominant                                                               #> T/T           92 10.637 0.05630  0.0000                  2.772e-04 316.0 #> C/T           53 10.351 0.10612 -0.2970 -0.5171 -0.07694                 #> C/C           12  9.929 0.24389 -0.7422 -1.1358 -0.34861                 #> Dominant                                                                 #> T/T           92 10.637 0.05630  0.0000                  5.555e-04 318.6 #> C/T-C/C       65 10.273 0.09882 -0.3774 -0.5871 -0.16762                 #> Recessive                                                                #> T/T-C/T      145 10.532 0.05375  0.0000                  1.976e-03 321.0 #> C/C           12  9.929 0.24389 -0.6297 -1.0218 -0.23761                 #> Overdominant                                                             #> T/T-C/C      104 10.555 0.06087  0.0000                  6.889e-02 327.4 #> C/T           53 10.351 0.10612 -0.2091 -0.4329  0.01461                 #> log-Additive                                                             #> 0,1,2                           -0.3393 -0.5003 -0.17829 5.918e-05 314.3   # # Interaction analysis #  # Interaction SNP and factor association(log(protein)~snp10001*sex+blood.pre, data=datSNP,            model=\"codominant\") #> Warning: 'varlist' has changed (from nvar=2) to new 3 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #>  #>       SNP: snp10001  adjusted by: blood.pre  #>  Interaction  #> --------------------- #>         Male             dif   lower   upper    Female              dif   lower #> T/T 40 10.65 0.08021  0.0000      NA      NA 52 10.626 0.07883 -0.02559 -0.2941 #> C/T 27 10.52 0.10292 -0.1298 -0.4481  0.1886 26 10.176 0.18415 -0.47199 -0.7943 #> C/C  8 10.01 0.34582 -0.6371 -1.1316 -0.1426  4  9.761 0.28635 -0.88728 -1.5571 #>       upper #> T/T  0.2429 #> C/T -0.1497 #> C/C -0.2174 #>  #> p interaction: 0.36299  #>  #>  sex within snp10001  #> --------------------- #> T/T  #>         n    me      se      dif   lower  upper #> Male   40 10.65 0.08021  0.00000      NA     NA #> Female 52 10.63 0.07883 -0.02559 -0.2941 0.2429 #>  #> C/T  #>         n    me     se     dif   lower   upper #> Male   27 10.52 0.1029  0.0000      NA      NA #> Female 26 10.18 0.1841 -0.3422 -0.6931 0.00864 #>  #> C/C  #>        n     me     se     dif  lower  upper #> Male   8 10.014 0.3458  0.0000     NA     NA #> Female 4  9.761 0.2863 -0.2502 -1.032 0.5319 #>  #> p trend: 0.26751  #>  #>  snp10001 within sex  #> --------------------- #> Male  #>      n    me      se     dif   lower   upper #> T/T 40 10.65 0.08021  0.0000      NA      NA #> C/T 27 10.52 0.10292 -0.1298 -0.4481  0.1886 #> C/C  8 10.01 0.34582 -0.6371 -1.1316 -0.1426 #>  #> Female  #>      n     me      se     dif   lower   upper #> T/T 52 10.626 0.07883  0.0000      NA      NA #> C/T 26 10.176 0.18415 -0.4464 -0.7538 -0.1390 #> C/C  4  9.761 0.28635 -0.8617 -1.5245 -0.1989 #>  #> p trend: 0.36299   # Interaction SNP and SNP (codominant and codominant) association(log(protein)~snp10001*factor(snp10002)+blood.pre,            data=datSNP, model=\"codominant\") #> Warning: 'varlist' has changed (from nvar=2) to new 3 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #>  #>       SNP: snp10001  adjusted by: blood.pre  #>  Interaction  #> --------------------- #>           C/C             dif   lower   upper      A/C              dif   lower #> T/T 38 10.591 0.1004  0.00000      NA      NA 49 10.66 0.07051  0.06403 -0.2133 #> C/T 24 10.502 0.1622 -0.08375 -0.4189  0.2514 29 10.23 0.13823 -0.36600 -0.6821 #> C/C 12  9.929 0.2439 -0.66157 -1.0860 -0.2371  0  0.00 0.00000       NA      NA #>        upper n    me  A/A    dif   lower  upper #> T/T  0.34134 5 10.78 0.15 0.1799 -0.4327 0.7925 #> C/T -0.04993 0  0.00 0.00     NA      NA     NA #> C/C       NA 0  0.00 0.00     NA      NA     NA #>  #> p interaction: 0.13332  #>  #>  factor(snp10002) within snp10001  #> --------------------- #> T/T  #>      n    me      se     dif   lower  upper #> C/C 38 10.59 0.10044 0.00000      NA     NA #> A/C 49 10.66 0.07051 0.06403 -0.2133 0.3413 #> A/A  5 10.78 0.14998 0.17988 -0.4327 0.7925 #>  #> C/T  #>      n    me     se     dif   lower   upper #> C/C 24 10.50 0.1622  0.0000      NA      NA #> A/C 29 10.23 0.1382 -0.2823 -0.6373 0.07276 #> A/A  0  0.00 0.0000      NA      NA      NA #>  #> C/C  #>      n    me     se dif lower upper #> C/C 12 9.929 0.2439   0    NA    NA #> A/C  0 0.000 0.0000  NA    NA    NA #> A/A  0 0.000 0.0000  NA    NA    NA #>  #> p trend: 0.41739  #>  #>  snp10001 within factor(snp10002)  #> --------------------- #> C/C  #>      n     me     se      dif   lower   upper #> T/T 38 10.591 0.1004  0.00000      NA      NA #> C/T 24 10.502 0.1622 -0.08375 -0.4189  0.2514 #> C/C 12  9.929 0.2439 -0.66157 -1.0860 -0.2371 #>  #> A/C  #>      n    me      se   dif   lower   upper #> T/T 49 10.66 0.07051  0.00      NA      NA #> C/T 29 10.23 0.13823 -0.43 -0.7304 -0.1296 #> C/C  0  0.00 0.00000    NA      NA      NA #>  #> A/A  #>     n    me   se dif lower upper #> T/T 5 10.78 0.15   0    NA    NA #> C/T 0  0.00 0.00  NA    NA    NA #> C/C 0  0.00 0.00  NA    NA    NA #>  #> p trend: 0.097576   # Interaction SNP and SNP (dominant and recessive) association(log(protein)~snp10001*factor(recessive(snp100019))+blood.pre,            data=datSNP, model=\"dominant\") #> Warning: 'varlist' has changed (from nvar=2) to new 3 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=3) to new 4 after EncodeVars() -- should no longer happen! #>  #>       SNP: snp10001  adjusted by: blood.pre  #>  Interaction  #> --------------------- #>        G/G-C/G             dif   lower    upper      C/C             dif #> T/T 60  10.650 0.06314  0.0000      NA       NA 32 10.61 0.1117 -0.03823 #> C/T 53  10.351 0.10612 -0.2961 -0.5393 -0.05294  0  0.00 0.0000       NA #> C/C 12   9.929 0.24389 -0.7191 -1.1257 -0.31256  0  0.00 0.0000       NA #>       lower  upper #> T/T -0.3196 0.2432 #> C/T      NA     NA #> C/C      NA     NA #>  #> p interaction: NA  #>  #>  factor(recessive(snp100019)) within snp10001  #> --------------------- #> T/T  #>          n    me      se      dif   lower  upper #> G/G-C/G 60 10.65 0.06314  0.00000      NA     NA #> C/C     32 10.61 0.11174 -0.03823 -0.3196 0.2432 #>  #> C/T  #>          n    me     se dif lower upper #> G/G-C/G 53 10.35 0.1061   0    NA    NA #> C/C      0  0.00 0.0000  NA    NA    NA #>  #> C/C  #>          n    me     se dif lower upper #> G/G-C/G 12 9.929 0.2439   0    NA    NA #> C/C      0 0.000 0.0000  NA    NA    NA #>  #> p trend: NA  #>  #>  snp10001 within factor(recessive(snp100019))  #> --------------------- #> G/G-C/G  #>      n     me      se     dif   lower    upper #> T/T 60 10.650 0.06314  0.0000      NA       NA #> C/T 53 10.351 0.10612 -0.2961 -0.5393 -0.05294 #> C/C 12  9.929 0.24389 -0.7191 -1.1257 -0.31256 #>  #> C/C  #>      n    me     se dif lower upper #> T/T 32 10.61 0.1117   0    NA    NA #> C/T  0  0.00 0.0000  NA    NA    NA #> C/C  0  0.00 0.0000  NA    NA    NA #>  #> p trend: NA"},{"path":"/reference/asthma.html","id":null,"dir":"Reference","previous_headings":"","what":"SNP data on asthma case-control study — asthma","title":"SNP data on asthma case-control study — asthma","text":"data.frame 51 SNPs 6 epidemiological variables: country, gender, age, bmi, smoke ans case/control status.","code":""},{"path":"/reference/asthma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNP data on asthma case-control study — asthma","text":"","code":"data(\"asthma\")"},{"path":"/reference/asthma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SNP data on asthma case-control study — asthma","text":"asthma data frame 1578 rows (individuals) 57 columns (variables) data genetic study asthma.","code":""},{"path":"/reference/asthma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SNP data on asthma case-control study — asthma","text":"data.frame object.","code":""},{"path":"/reference/asthma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SNP data on asthma case-control study — asthma","text":"","code":"data(asthma) dim(asthma) #> [1] 1578   57 str(asthma) #> 'data.frame':\t1578 obs. of  57 variables: #>  $ country    : Factor w/ 10 levels \"Australia\",\"Belgium\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ gender     : Factor w/ 2 levels \"Females\",\"Males\": 2 2 2 1 1 1 1 2 1 1 ... #>  $ age        : num  42.8 50.2 46.7 47.9 48.4 ... #>  $ bmi        : num  20.1 24.7 27.7 33.3 25.2 ... #>  $ smoke      : int  1 0 0 0 0 1 0 0 0 0 ... #>  $ casecontrol: int  0 0 0 0 1 0 0 0 0 0 ... #>  $ rs4490198  : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 3 3 3 2 2 2 3 2 2 2 ... #>  $ rs4849332  : Factor w/ 3 levels \"GG\",\"GT\",\"TT\": 3 2 3 2 1 2 3 3 2 1 ... #>  $ rs1367179  : Factor w/ 3 levels \"CC\",\"GC\",\"GG\": 2 2 2 3 3 3 2 3 3 3 ... #>  $ rs11123242 : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 2 2 2 1 1 1 2 1 1 1 ... #>  $ rs13014858 : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 1 2 1 2 3 2 2 2 2 3 ... #>  $ rs1430094  : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 1 2 1 2 3 2 2 2 2 3 ... #>  $ rs1430093  : Factor w/ 3 levels \"AA\",\"CA\",\"CC\": 1 2 1 2 3 2 2 2 2 3 ... #>  $ rs746710   : Factor w/ 3 levels \"CC\",\"GC\",\"GG\": 1 1 1 2 2 2 2 2 2 2 ... #>  $ rs1430090  : Factor w/ 3 levels \"GG\",\"TG\",\"TT\": 2 1 3 3 3 3 3 3 3 2 ... #>  $ rs6737251  : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 1 1 3 2 3 1 1 1 2 2 ... #>  $ rs11685217 : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 1 1 2 2 2 1 1 1 1 2 ... #>  $ rs1430097  : Factor w/ 3 levels \"AA\",\"CA\",\"CC\": 3 3 1 2 1 2 3 3 2 2 ... #>  $ rs10496465 : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 2 2 1 1 1 1 1 1 1 1 ... #>  $ rs3756688  : Factor w/ 3 levels \"CC\",\"TC\",\"TT\": 3 2 2 1 2 2 3 2 1 2 ... #>  $ rs2303063  : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 1 2 2 3 2 2 1 2 3 2 ... #>  $ rs1422993  : Factor w/ 3 levels \"GG\",\"GT\",\"TT\": 1 2 1 2 2 1 1 1 3 1 ... #>  $ rs2400478  : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 3 2 3 2 2 3 3 3 1 3 ... #>  $ rs714588   : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 2 1 2 2 1 2 2 2 2 2 ... #>  $ rs1023555  : Factor w/ 3 levels \"AA\",\"TA\",\"TT\": 1 3 2 3 3 2 3 3 3 3 ... #>  $ rs898070   : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 2 3 3 2 3 3 3 2 2 2 ... #>  $ rs963218   : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 1 1 2 2 1 2 1 2 2 2 ... #>  $ rs1419835  : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 2 1 2 1 1 2 1 1 1 2 ... #>  $ rs765023   : Factor w/ 3 levels \"CC\",\"TC\",\"TT\": 3 3 1 2 2 1 2 3 3 2 ... #>  $ rs1345267  : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 2 1 3 2 3 3 3 1 1 2 ... #>  $ rs324381   : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 2 3 2 2 2 2 2 3 2 2 ... #>  $ hopo546333 : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 3 3 2 3 3 3 3 3 3 3 ... #>  $ rs184448   : Factor w/ 3 levels \"GG\",\"TG\",\"TT\": 3 1 3 2 3 3 3 1 2 2 ... #>  $ rs324396   : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 1 3 1 1 1 1 1 2 2 1 ... #>  $ rs324957   : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 3 1 3 2 3 3 3 1 2 2 ... #>  $ rs324960   : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 2 1 2 1 1 2 1 1 2 1 ... #>  $ rs10486657 : Factor w/ 3 levels \"CC\",\"CT\",\"TT\": 1 1 2 2 2 2 2 1 1 2 ... #>  $ rs324981   : Factor w/ 3 levels \"AA\",\"AT\",\"TT\": 2 1 3 2 2 2 2 1 2 2 ... #>  $ rs1419780  : Factor w/ 3 levels \"CC\",\"CG\",\"GG\": 1 1 2 2 2 2 2 1 1 2 ... #>  $ rs325462   : Factor w/ 3 levels \"AA\",\"AT\",\"TT\": 3 1 3 2 3 2 3 1 2 2 ... #>  $ rs727162   : Factor w/ 3 levels \"CC\",\"GC\",\"GG\": 3 3 2 3 3 2 3 2 3 3 ... #>  $ rs10250709 : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 1 3 1 3 2 3 2 2 2 3 ... #>  $ rs6958905  : Factor w/ 3 levels \"CC\",\"TC\",\"TT\": 1 3 1 3 2 3 2 2 2 3 ... #>  $ rs10238983 : Factor w/ 3 levels \"CC\",\"TC\",\"TT\": 2 3 1 3 2 3 2 3 2 3 ... #>  $ rs4941643  : Factor w/ 3 levels \"AA\",\"AG\",\"GG\": 2 2 1 2 1 3 2 2 2 3 ... #>  $ rs3794381  : Factor w/ 3 levels \"CC\",\"CG\",\"GG\": 1 2 1 2 1 2 1 2 2 3 ... #>  $ rs2031532  : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 2 2 3 2 3 1 2 2 2 2 ... #>  $ rs2247119  : Factor w/ 3 levels \"CC\",\"TC\",\"TT\": 2 3 3 2 3 3 2 3 2 3 ... #>  $ rs8000149  : Factor w/ 3 levels \"CC\",\"TC\",\"TT\": 2 2 3 2 3 1 2 2 2 2 ... #>  $ rs2274276  : Factor w/ 3 levels \"CC\",\"GC\",\"GG\": 2 2 3 2 3 1 2 2 2 1 ... #>  $ rs7332573  : Factor w/ 3 levels \"GG\",\"GT\",\"TT\": 1 1 1 1 1 1 1 1 1 2 ... #>  $ rs3829366  : Factor w/ 3 levels \"AA\",\"TA\",\"TT\": 2 2 3 2 3 1 2 2 2 1 ... #>  $ rs6084432  : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 3 3 2 3 3 3 3 3 3 3 ... #>  $ rs512625   : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 3 2 2 2 2 1 2 2 3 2 ... #>  $ rs3918395  : Factor w/ 3 levels \"GG\",\"GT\",\"TT\": 1 1 2 1 1 1 1 1 1 1 ... #>  $ rs2787095  : Factor w/ 3 levels \"CC\",\"GC\",\"GG\": 2 2 1 2 2 2 2 1 3 3 ... #>  $ rs2853215  : Factor w/ 3 levels \"AA\",\"GA\",\"GG\": 3 1 3 3 2 3 2 3 2 3 ..."},{"path":"/reference/BonferroniSig.html","id":null,"dir":"Reference","previous_headings":"","what":"Bonferroni correction of p values — Bonferroni.sig","title":"Bonferroni correction of p values — Bonferroni.sig","text":"function shows SNPs statistically significant correcting   number tests performed (Bonferroni correction) object class   \"WGassociation\"","code":""},{"path":"/reference/BonferroniSig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bonferroni correction of p values — Bonferroni.sig","text":"","code":"Bonferroni.sig(x, model = \"codominant\", alpha = 0.05,        include.all.SNPs=FALSE)"},{"path":"/reference/BonferroniSig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bonferroni correction of p values — Bonferroni.sig","text":"x object class 'WGassociation'. model character string specifying type genetic model (mode inheritance).             indicantes genotypes collapsed 'plot.summary' TRUE. Possible            values \"codominant\", \"dominant\", \"recessive\", \"overdominant\", \"log-additive\".             default \"codominant\". first words required, e.g \"co\", \"\", ... . alpha nominal level significance. Default 0.05 include..SNPs logical value indicating whether SNPs considered Bonferroni     correction. , number performed tests equal number SNPs equal     number SNPs p value may computed. default value FALSE indicating      number tests equal number SNPs non Monomorphic rate genotyping     greater percentage indicated GeneticModel.pval function.","code":""},{"path":"/reference/BonferroniSig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bonferroni correction of p values — Bonferroni.sig","text":"deciding genetic model, function shows SNPs statistically significant    alpha level corrected number performed tests.","code":""},{"path":"/reference/BonferroniSig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bonferroni correction of p values — Bonferroni.sig","text":"data frame SNPs p values SNPs statistically significant  Bonferroni correction","code":""},{"path":[]},{"path":"/reference/BonferroniSig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bonferroni correction of p values — Bonferroni.sig","text":"","code":"data(SNPs) datSNP<-setupSNP(SNPs,6:40,sep=\"\") ans<-WGassociation(protein~1,data=datSNP,model=\"all\") Bonferroni.sig(ans, model=\"codominant\", alpha=0.05, include.all.SNPs=FALSE) #> number of tests: 22 #> alpha: 0.05 #> corrected alpha: 0.00227272727272727 #>    No significant SNPs after Bonferroni correction"},{"path":"/reference/dscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact distribution of a genetic score — dscore","title":"Exact distribution of a genetic score — dscore","text":"Computes exact distribution genetic score set SNPs","code":""},{"path":"/reference/dscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact distribution of a genetic score — dscore","text":"","code":"dscore(x, ...)  # S3 method for default dscore(x, ...)  # S3 method for character dscore(x, ...)  pscore(q, x, ...)"},{"path":"/reference/dscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact distribution of a genetic score — dscore","text":"x numeric vector containing either minor allele frequencies (MAF) SNPs used created genetic score names SNPs. q quantile ... arguments passed useMart function biomaRt (necessary).","code":""},{"path":"/reference/dscore.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exact distribution of a genetic score — dscore","text":"Subirana, G Lucas, C Lluis-Granella, R Elosua, JR Gonzalez. Predicting individual disease probability using exact distribution genetic risk score population level. Submitted","code":""},{"path":"/reference/dscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact distribution of a genetic score — dscore","text":"vector probabilities 0, 1, 2, 3, ... 2*K alleles genetic score (K indicates number SNPs). name SNPs provided, attribute called 'MAFs' also returned","code":""},{"path":"/reference/dscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exact distribution of a genetic score — dscore","text":"","code":"gs <- dscore(c(0.23, 0.16, 0.12, 0.02)) gs  #>    0 alleles    1 alleles    2 alleles    3 alleles    4 alleles    5 alleles  #> 3.111412e-01 4.019629e-01 2.146830e-01 6.121239e-02 1.001712e-02 9.360788e-04  #>    6 alleles    7 alleles    8 alleles  #> 4.632330e-05 1.012981e-06 7.800421e-09  #> attr(,\"class\") #> [1] \"dscore\" plot(gs)"},{"path":"/reference/GenomicControl.html","id":null,"dir":"Reference","previous_headings":"","what":"Population substructure — GenomicControl","title":"Population substructure — GenomicControl","text":"function estimates inflation (deflation) factor, lambda, indicated paper   Devlin et al. (2001) corrects p-values using factor.","code":""},{"path":"/reference/GenomicControl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population substructure — GenomicControl","text":"","code":"GenomicControl(x, snp.sel)"},{"path":"/reference/GenomicControl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population substructure — GenomicControl","text":"x object class 'WGassociation'. snp.sel SNPs used compute lambda. required.","code":""},{"path":"/reference/GenomicControl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population substructure — GenomicControl","text":"method valid 2x2 tables. means object class 'WGassociation' might  fitted codominant model. See reference details.","code":""},{"path":"/reference/GenomicControl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population substructure — GenomicControl","text":"object class 'WGassociation' p-values corrected genomic control.","code":""},{"path":"/reference/GenomicControl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Population substructure — GenomicControl","text":"B Devlin, K Roeder, S.. Bacanu. Unbiased Methods Population Based Association Studies.              Genetic Epidemiology (2001) 21:273-84","code":""},{"path":[]},{"path":"/reference/GenomicControl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population substructure — GenomicControl","text":"","code":"data(SNPs)  datSNP<-setupSNP(SNPs,6:40,sep=\"\") res<-WGassociation(casco,datSNP,model=c(\"do\",\"re\",\"log-add\"))  # Genomic Control  resCorrected<-GenomicControl(res) #> 0.4986546699126611.114486326239880.34032389595943 #>     dominant    recessive log-additive  #>    0.4986547    1.1144863    0.3403239"},{"path":"/reference/getGeneSymbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gene symbol from a list of SNPs — getGeneSymbol","title":"Get gene symbol from a list of SNPs — getGeneSymbol","text":"Get gene symbol list SNPs","code":""},{"path":"/reference/getGeneSymbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gene symbol from a list of SNPs — getGeneSymbol","text":"","code":"getGeneSymbol(   x,   snpCol = 1,   chrCol = 2,   posCol = 3,   db = TxDb.Hsapiens.UCSC.hg19.knownGene )"},{"path":"/reference/getGeneSymbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get gene symbol from a list of SNPs — getGeneSymbol","text":"x data.frame containing: SNP name, chromosome genomic position. snpCol column x SNP name. Default 1. chrCol column x SNP chromosome. Default 2. posCol column x SNP position. Default 3. db reference genome. Default 'TxDb.Hsapiens.UCSC.hg19.knownGene'","code":""},{"path":"/reference/getGeneSymbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gene symbol from a list of SNPs — getGeneSymbol","text":"data.frame initial information gene symbol","code":""},{"path":"/reference/getGeneSymbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get gene symbol from a list of SNPs — getGeneSymbol","text":"","code":"# \\donttest{         snps = c('rs58108140','rs189107123','rs180734498','rs144762171')         chr = c('chr1','chr1','chr1','chr1')         pos = c(10583, 10611, 13302, 13327)                  x <- data.frame(snps, chr, pos )                  getGeneSymbol(x) #> 'select()' returned many:1 mapping between keys and columns #> 'select()' returned many:1 mapping between keys and columns #>         names seqnames position   LOCATION  GENESYMBOL    GENEID #> 1 rs144762171     chr1    13327     intron     DDX11L1 100287102 #> 2 rs144762171     chr1    13327     intron SLMO2-ATP5E 100533975 #> 3 rs180734498     chr1    13302     intron     DDX11L1 100287102 #> 4 rs180734498     chr1    13302     intron SLMO2-ATP5E 100533975 #> 5 rs189107123     chr1    10611   promoter     DDX11L1 100287102 #> 6 rs189107123     chr1    10611 intergenic        <NA>      <NA> #> 7  rs58108140     chr1    10583   promoter     DDX11L1 100287102 #> 8  rs58108140     chr1    10583 intergenic        <NA>      <NA>     # }"},{"path":"/reference/getNiceTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Latex output — getNiceTable","title":"Get Latex output — getNiceTable","text":"Create Latex output association analyses","code":""},{"path":"/reference/getNiceTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Latex output — getNiceTable","text":"","code":"getNiceTable( x )"},{"path":"/reference/getNiceTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Latex output — getNiceTable","text":"x WGassociation object.","code":""},{"path":"/reference/getNiceTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Latex output — getNiceTable","text":"R output specific association analyses exported LaTeX","code":""},{"path":"/reference/getSignificantSNPs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract significant SNPs from an object of class 'WGassociation' — getSignificantSNPs","title":"Extract significant SNPs from an object of class 'WGassociation' — getSignificantSNPs","text":"Extract significant SNPs object class 'WGassociation' genomic    information available","code":""},{"path":"/reference/getSignificantSNPs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract significant SNPs from an object of class 'WGassociation' — getSignificantSNPs","text":"","code":"getSignificantSNPs(x, chromosome, model, sig = 1e-15)"},{"path":"/reference/getSignificantSNPs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract significant SNPs from an object of class 'WGassociation' — getSignificantSNPs","text":"x object class 'WGassociation' chromosome chromosome SNPs extracted model genetic model SNPs extracted sig statistical significance level. default 1e-15","code":""},{"path":"/reference/getSignificantSNPs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract significant SNPs from an object of class 'WGassociation' — getSignificantSNPs","text":"list following components: names name SNPs column columns corresponding SNPs original data frame ...","code":""},{"path":[]},{"path":"/reference/getSignificantSNPs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract significant SNPs from an object of class 'WGassociation' — getSignificantSNPs","text":"","code":"data(resHapMap) # resHapMap contains the results for a log-additive genetic model  # to get the significant SNPs for chromosome 12 getSignificantSNPs(resHapMap,chromosome=12) #> $names #>  [1] \"rs7316832\"  \"rs11044333\" \"rs7312859\"  \"rs405394\"   \"rs7953946\"  #>  [6] \"rs12369342\" \"rs7973967\"  \"rs1846397\"  \"rs4429143\"  \"rs11066989\" #> [11] \"rs734856\"   \"rs6489167\"  #>  #> $column #>  [1] 1726 1738 1746 1773 1783 1797 1829 1879 1964 2044 2062 2084 #>  # to get the significant SNPs for chromosome 5 getSignificantSNPs(resHapMap,5) #> $names #>  [1] \"rs6555568\"  \"rs4702723\"  \"rs4866272\"  \"rs7720894\"  \"rs6452430\"  #>  [6] \"rs10067664\" \"rs6880750\"  \"rs267030\"   \"rs179194\"   \"rs809039\"   #> [11] \"rs1015565\"  \"rs6871275\"  \"rs1864998\"  \"rs263890\"   \"rs11955678\" #> [16] \"rs1702380\"  \"rs1106986\"  #>  #> $column #>  [1] 6726 6742 6807 6927 6985 7022 7099 7101 7107 7123 7143 7157 7204 7260 7268 #> [16] 7277 7290 #>  # to get the significant SNPs for chromosome X at level 1e-8 getSignificantSNPs(resHapMap,5,sig=1e-8) #> $names #>  [1] \"rs6555568\"  \"rs4702723\"  \"rs12516408\" \"rs10041690\" \"rs191000\"   #>  [6] \"rs253635\"   \"rs13181165\" \"rs2607330\"  \"rs16901390\" \"rs7735353\"  #> [11] \"rs11742664\" \"rs4469197\"  \"rs10473357\" \"rs4866272\"  \"rs1490762\"  #> [16] \"rs10069244\" \"rs10941252\" \"rs2937537\"  \"rs1423431\"  \"rs10069018\" #> [21] \"rs13174497\" \"rs6451684\"  \"rs16902086\" \"rs6450059\"  \"rs1469100\"  #> [26] \"rs6450358\"  \"rs7720894\"  \"rs16896712\" \"rs6449897\"  \"rs706735\"   #> [31] \"rs10471775\" \"rs6864083\"  \"rs286640\"   \"rs1992589\"  \"rs7727150\"  #> [36] \"rs6885813\"  \"rs6893857\"  \"rs16898954\" \"rs6452430\"  \"rs4334858\"  #> [41] \"rs17284253\" \"rs10942509\" \"rs11743694\" \"rs10067664\" \"rs2432175\"  #> [46] \"rs150543\"   \"rs7724171\"  \"rs3087832\"  \"rs6880750\"  \"rs267030\"   #> [51] \"rs179194\"   \"rs2973991\"  \"rs11950080\" \"rs2017378\"  \"rs154506\"   #> [56] \"rs809039\"   \"rs6880412\"  \"rs1015565\"  \"rs9784675\"  \"rs6871275\"  #> [61] \"rs2916627\"  \"rs1016522\"  \"rs3095960\"  \"rs10062780\" \"rs2895649\"  #> [66] \"rs10055303\" \"rs3777140\"  \"rs1864998\"  \"rs13182548\" \"rs10045546\" #> [71] \"rs263890\"   \"rs2961846\"  \"rs11955678\" \"rs261631\"   \"rs1702380\"  #> [76] \"rs1106986\"  \"rs2651294\"  \"rs2644629\"  \"rs6881398\"  \"rs653562\"   #>  #> $column #>  [1] 6726 6742 6744 6745 6750 6764 6768 6770 6774 6779 6780 6800 6804 6807 6816 #> [16] 6826 6856 6860 6864 6866 6872 6884 6888 6895 6900 6908 6927 6946 6947 6950 #> [31] 6952 6955 6960 6964 6966 6971 6976 6984 6985 6988 6989 7003 7014 7022 7023 #> [46] 7024 7078 7094 7099 7101 7107 7108 7109 7111 7118 7123 7124 7143 7149 7157 #> [61] 7164 7182 7184 7188 7190 7196 7197 7204 7234 7254 7260 7263 7268 7275 7277 #> [76] 7290 7292 7296 7300 7303 #>"},{"path":"/reference/haplointeraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Haplotype interaction with a covariate — haplo.interaction","title":"Haplotype interaction with a covariate — haplo.interaction","text":"function computes ORs (mean differences quantitative trait analyzed) 95% confidence intervals corresponding   interaction haplotypes categorical covariate","code":""},{"path":"/reference/haplointeraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Haplotype interaction with a covariate — haplo.interaction","text":"","code":"haplo.interaction(formula, data, SNPs.sel, quantitative =    is.quantitative(formula, data), haplo.freq.min = 0.05, ...)"},{"path":"/reference/haplointeraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Haplotype interaction with a covariate — haplo.interaction","text":"formula symbolic description model fitted (formula object).                  might either continuous variable (quantitative traits)                  factor variable (case-control studies) response left ~                  operator term corresponding interaction variable right indicated using                  'interaction' function (e.g. ~int(var), var factor variable)                  required. Terms additional covariates right ~ operator may                  added fit adjusted model (e.g., ~var1+var2+...+varN+int(var)). data object class 'setupSNP' containing variables model SNPs used estimate                haplotypes. SNPs.sel vector indicating names SNPs used estimate haplotypes quantitative logical value indicating whether phenotype (                      left operator ~ 'formula' argument) quantitative. function                        '.quantitative' returns FALSE phenotype                       variable two categories (.e. indicating case-control status). Thus,                       required argument may modified user. haplo.freq.min control parameter haplo.glm included 'haplo.glm.control'. parameter corresponds minimum                          haplotype frequency haplotype included regression model effect.                         haplotype frequency based EM algorithm estimates haplotype frequencies independently                         trait. ... additional parameters 'haplo.glm.control'.","code":""},{"path":"/reference/haplointeraction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Haplotype interaction with a covariate — haplo.interaction","text":"function estimates haplotypes SNPs indicated 'SNPs.sel' argument. , usign 'haplo.glm' function ('haplo.stats'   library) estimates interaction haplotypes covariate indicated formula means 'interaction' function.","code":""},{"path":"/reference/haplointeraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Haplotype interaction with a covariate — haplo.interaction","text":"Three different tables given. first one corresponds full interaction matrix ORs (mean differences quantitative    trait analyzed)  expressed respect frequent haplotype first category covariate. two tables    show ORs (mean differences quantitative trait analyzed) 95% confidence intervals marginal models.    P values interaction also showed output.","code":""},{"path":"/reference/haplointeraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Haplotype interaction with a covariate — haplo.interaction","text":"","code":"# not Run library(SNPassoc) library(haplo.stats) #> Loading required package: arsenal  data(SNPs) datSNP<-setupSNP(SNPs,6:40,sep=\"\") res <- haplo.interaction(log(protein)~int(sex), data=datSNP,                     SNPs.sel=c(\"snp100019\",\"snp10001\",\"snp100029\")) res #>  #>      Haplotype using SNPs: snp100019 snp10001 snp100029  adjusted by:   #>  Interaction  #> ------------------------- #>      HapFreq Male (dif) lower upper Female (dif) lower upper #> CTG   0.4427       0.00    NA    NA        -0.20 -0.58  0.18 #> GTG   0.2983      -0.16 -0.46  0.13        -0.10 -0.43  0.23 #> GCA   0.2313      -0.30 -0.53 -0.07        -0.62 -1.00 -0.25 #> rare  0.0278       0.00 -0.60  0.59        -0.96 -1.82 -0.10 #>  #> p interaction: 0.1361708  #>  #>  sex within haplotype  #> ------------------------- #> $Male #>       diff lower upper #> CTG   0.00    NA    NA #> GTG  -0.16 -0.46  0.13 #> GCA  -0.30 -0.53 -0.07 #> rare  0.00 -0.60  0.59 #>  #> $Female #>       diff lower upper #> CTG   0.00    NA    NA #> GTG   0.09 -0.17  0.35 #> GCA  -0.42 -0.68 -0.17 #> rare -0.76 -1.58  0.05 #>  #> haplotype within sex  #> ------------------------- #> $CTG #>        diff lower upper #> Male    0.0    NA    NA #> Female -0.2 -0.58  0.18 #>  #> $GTG #>        diff lower upper #> Male   0.00    NA    NA #> Female 0.06 -0.22  0.34 #>  #> $GCA #>         diff lower upper #> Male    0.00    NA    NA #> Female -0.32 -0.66  0.01 #>  #> $rare #>         diff lower upper #> Male    0.00    NA    NA #> Female -0.96 -1.96  0.04 #>"},{"path":"/reference/HapMap.html","id":null,"dir":"Reference","previous_headings":"","what":"SNPs from HapMap project — HapMap","title":"SNPs from HapMap project — HapMap","text":"Information 9307 SNPs HapMap project belonging 22 chromosomes. Information two different population available: European population (CEU) Yoruba (YRI). genomic information (names SNPs, chromosomes genetic position) also available data frame called 'HapMap.SNPs.pos'.","code":""},{"path":"/reference/HapMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNPs from HapMap project — HapMap","text":"","code":"data(HapMap)"},{"path":"/reference/HapMap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SNPs from HapMap project — HapMap","text":"data frame 120 observations 9808 variables (SNPs) one variable   called 'group' indicating population.","code":""},{"path":"/reference/HapMap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SNPs from HapMap project — HapMap","text":"HapMap project (http://www.hapmap.org)","code":""},{"path":"/reference/HapMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SNPs from HapMap project — HapMap","text":"","code":"data(HapMap)"},{"path":"/reference/HapMap.SNPs.pos.html","id":null,"dir":"Reference","previous_headings":"","what":"SNPs from HapMap project — HapMap.SNPs.pos","title":"SNPs from HapMap project — HapMap.SNPs.pos","text":"Information 9307 SNPs HapMap project     belonging 22 chromosomes. Information two different population available:         European population (CEU) Yoruba (YRI). genomic     information (names SNPs, chromosomes genetic position)     also available data frame called 'HapMap.SNPs.pos'.","code":""},{"path":"/reference/HapMap.SNPs.pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNPs from HapMap project — HapMap.SNPs.pos","text":"","code":"data(HapMap.SNPs.pos)"},{"path":"/reference/HapMap.SNPs.pos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SNPs from HapMap project — HapMap.SNPs.pos","text":"data frame 120 observations 9808 variables (SNPs) one variable     called 'group' indicating population.","code":""},{"path":"/reference/HapMap.SNPs.pos.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SNPs from HapMap project — HapMap.SNPs.pos","text":"HapMap project (http://www.hapmap.org)","code":""},{"path":"/reference/HapMap.SNPs.pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SNPs from HapMap project — HapMap.SNPs.pos","text":"","code":"data(HapMap.SNPs.pos)"},{"path":"/reference/inheritance.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapsing (or recoding) genotypes into different categories (generally two) depending on a given genetic mode of inheritance — inheritance","title":"Collapsing (or recoding) genotypes into different categories (generally two) depending on a given genetic mode of inheritance — inheritance","text":"codominant function recodifies variable genotypes depending allelic frequency              descending order. dominant, recessive, overdominant functions collapse three categories given SNP              two categories follows: Let 'AA', 'Aa', 'aa' three genotypes. determining             frequent allele (suppose '' major allele) functions return vector             categories follows. dominant: 'AA' 'Aa-aa'; recessive: 'AA-Aa' 'aa';              overdominant: 'AA-aa' vs 'Aa'. additive function creates numerical variable, 1, 2, 3 corresponding three genotypes sorted             descending allelic frequency (model referred log-additive).","code":""},{"path":"/reference/inheritance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapsing (or recoding) genotypes into different categories (generally two) depending on a given genetic mode of inheritance — inheritance","text":"","code":"codominant(o) dominant(o) recessive(o) overdominant(o) additive(o)"},{"path":"/reference/inheritance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapsing (or recoding) genotypes into different categories (generally two) depending on a given genetic mode of inheritance — inheritance","text":"o categorical covariate genotypes","code":""},{"path":"/reference/inheritance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapsing (or recoding) genotypes into different categories (generally two) depending on a given genetic mode of inheritance — inheritance","text":"snp object collapsing genotypes different categories depending given genetic mode inheritance","code":""},{"path":"/reference/inheritance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapsing (or recoding) genotypes into different categories (generally two) depending on a given genetic mode of inheritance — inheritance","text":"","code":"data(SNPs) dominant(snp(SNPs$snp10001,sep=\"\")) #>   [1] T/T     T/T     T/T     C/T-C/C T/T     T/T     T/T     T/T     C/T-C/C #>  [10] T/T     C/T-C/C C/T-C/C C/T-C/C T/T     T/T     T/T     C/T-C/C T/T     #>  [19] T/T     T/T     T/T     C/T-C/C C/T-C/C T/T     T/T     C/T-C/C T/T     #>  [28] T/T     T/T     C/T-C/C T/T     T/T     C/T-C/C T/T     C/T-C/C C/T-C/C #>  [37] C/T-C/C C/T-C/C C/T-C/C T/T     T/T     T/T     T/T     C/T-C/C T/T     #>  [46] C/T-C/C C/T-C/C C/T-C/C C/T-C/C T/T     T/T     C/T-C/C C/T-C/C T/T     #>  [55] T/T     T/T     T/T     T/T     C/T-C/C T/T     T/T     T/T     T/T     #>  [64] T/T     T/T     T/T     C/T-C/C T/T     T/T     C/T-C/C C/T-C/C T/T     #>  [73] T/T     C/T-C/C T/T     T/T     T/T     T/T     T/T     C/T-C/C C/T-C/C #>  [82] T/T     T/T     T/T     C/T-C/C T/T     T/T     C/T-C/C C/T-C/C C/T-C/C #>  [91] T/T     T/T     C/T-C/C T/T     T/T     T/T     T/T     T/T     C/T-C/C #> [100] T/T     C/T-C/C C/T-C/C C/T-C/C T/T     T/T     C/T-C/C C/T-C/C T/T     #> [109] T/T     C/T-C/C T/T     C/T-C/C C/T-C/C T/T     C/T-C/C C/T-C/C T/T     #> [118] T/T     C/T-C/C C/T-C/C C/T-C/C T/T     C/T-C/C T/T     T/T     T/T     #> [127] T/T     T/T     C/T-C/C T/T     C/T-C/C C/T-C/C T/T     C/T-C/C C/T-C/C #> [136] T/T     C/T-C/C T/T     T/T     C/T-C/C C/T-C/C C/T-C/C T/T     T/T     #> [145] T/T     T/T     C/T-C/C T/T     T/T     T/T     T/T     C/T-C/C T/T     #> [154] C/T-C/C C/T-C/C C/T-C/C C/T-C/C #> Genotypes: T/T C/T-C/C #> Alleles:   overdominant(snp(SNPs$snp10001,sep=\"\")) #>   [1] T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     #>  [10] T/T-C/C C/T     T/T-C/C C/T     T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C #>  [19] T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C T/T-C/C C/T     T/T-C/C #>  [28] T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C C/T     C/T     #>  [37] T/T-C/C C/T     C/T     T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C #>  [46] T/T-C/C C/T     C/T     C/T     T/T-C/C T/T-C/C C/T     C/T     T/T-C/C #>  [55] T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C T/T-C/C T/T-C/C T/T-C/C #>  [64] T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     C/T     T/T-C/C #>  [73] T/T-C/C C/T     T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     C/T     #>  [82] T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     #>  [91] T/T-C/C T/T-C/C C/T     T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     #> [100] T/T-C/C C/T     C/T     C/T     T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C #> [109] T/T-C/C C/T     T/T-C/C C/T     C/T     T/T-C/C C/T     C/T     T/T-C/C #> [118] T/T-C/C C/T     C/T     C/T     T/T-C/C T/T-C/C T/T-C/C T/T-C/C T/T-C/C #> [127] T/T-C/C T/T-C/C C/T     T/T-C/C C/T     T/T-C/C T/T-C/C C/T     C/T     #> [136] T/T-C/C C/T     T/T-C/C T/T-C/C C/T     C/T     C/T     T/T-C/C T/T-C/C #> [145] T/T-C/C T/T-C/C C/T     T/T-C/C T/T-C/C T/T-C/C T/T-C/C C/T     T/T-C/C #> [154] C/T     C/T     C/T     C/T     #> Genotypes: T/T-C/C C/T #> Alleles:"},{"path":"/reference/int.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify interaction term — int","title":"Identify interaction term — int","text":"special function used 'haplo.interaction' function.  identifies variable interact haplotype estimates.  Using int() formula implies interaction term variable haplotypes included 'haplo.glm' function.","code":""},{"path":"/reference/int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify interaction term — int","text":"","code":"int(x)"},{"path":"/reference/int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify interaction term — int","text":"x factor variable.","code":""},{"path":"/reference/int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify interaction term — int","text":"x","code":""},{"path":[]},{"path":"/reference/int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify interaction term — int","text":"","code":"library(SNPassoc) library(haplo.stats)  data(SNPs) datSNP<-setupSNP(SNPs, 6:40, sep = \"\") mod <- haplo.interaction(casco~int(sex)+blood.pre, data = datSNP,                           SNPs.sel = c(\"snp10001\",\"snp10004\",\"snp10005\")) #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen! #> Warning: 'varlist' has changed (from nvar=2) to new 4 after EncodeVars() -- should no longer happen!"},{"path":"/reference/interactionPval.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-dimensional SNP analysis for association studies — interactionPval","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"Perform two-dimensional SNP analysis (interaction) association studies   possible allowance covariate","code":""},{"path":"/reference/interactionPval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"","code":"interactionPval(formula, data, quantitative =            is.quantitative(formula, data), model = \"codominant\")"},{"path":"/reference/interactionPval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"formula formula object. might either continuous variable (quantitative traits)                  factor variable (case-control study) response left ~                  operator terms corresponding covariates adjusted. crude analysis                 performed indicating ~1 data required object class 'setupSNP'. quantitative logical value indicating whether phenotype (                      left operator ~ 'formula' argument) quantitative. function                        '.quantitative' returns FALSE phenotype                       variable two categories (.e. indicating case-control status). Thus,                       required argument may modified user. model character string specifying type genetic model (mode inheritance).             indicates genotypes collapsed. Possible            value \"codominant\", \"dominant\", \"recessive\", \"overdominant\" \"log-additive\". default            \"codominant\". first words required, e.g \"co\", \"\", \"re\", \"ov\", \"log\"","code":""},{"path":"/reference/interactionPval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"'interactionPval' function calculates, pair SNPs (,j), likelihood underling null model L0,    likelihood single-SNP, L() L(j), likelihood additive SNP   model La(,j), likelihood full SNP model (including SNP-SNP interaction), Lf(,j). upper triangle matrix function contains p values interaction (epistasis)    log-likelihood ratio test, LRT, LRTij = -2 (log Lf(,j) - log La(,j)) diagonal contains p values LRT crude effect SNP, LRTii = -2 (log L() - log L0) lower triangle contains p values LRT comparing two-SNP additive likelihood best   single-SNP models, LRTji = -2 (log La(,j) - log max(L(),L(j))) cases models including SNPs adjusted covariates indicated 'formula'   argument. method used either quantitative traits dicotomous variables (case-control studies).","code":""},{"path":"/reference/interactionPval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"'interactionPval' function returns matrix class 'SNPinteraction' containing p values corresponding    different likelihood ratio tests describe. Methods defined 'SNPinteraction' objects provided print plot. plot method uses 'image' plot grid    p values.  upper triangle contains interaction (epistasis) p values LRT. content lower triangle    p values LRT comparing additive model best single model. diagonal contains main effects    pvalues LRT. 'plot.SNPinteraction' function also allows user plot SNPs sorted genomic position    information chromosomes 'plotMissing' function.","code":""},{"path":"/reference/interactionPval.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5.","code":""},{"path":"/reference/interactionPval.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"two-dimensional SNP analysis dense grid can take great deal computer      time memory.","code":""},{"path":[]},{"path":"/reference/interactionPval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-dimensional SNP analysis for association studies — interactionPval","text":"","code":"data(SNPs) datSNP<-setupSNP(SNPs,6:40,sep=\"\")  ansCod<-interactionPval(log(protein)~sex,datSNP) print(ansCod) #>               snp10001     snp10002 snp10003 snp10004     snp10005 snp10006 #> snp10001  2.771617e-04 1.392739e-01        -        - 7.249123e-01        - #> snp10002  7.777631e-01 4.687701e-01        -        - 4.208993e-01        - #> snp10003             -            -        -        -            -        - #> snp10004             -            -        -        -            -        - #> snp10005  8.432484e-01 6.990766e-01        -        - 3.801196e-01        - #> snp10006             -            -        -        -            -        - #> snp10007             -            -        -        -            -        - #> snp10008  4.721705e-02 6.496771e-01        -        - 7.228263e-01        - #> snp10009  6.709425e-01 4.454383e-01        -        - 4.730575e-01        - #> snp100010            -            -        -        -            -        - #> snp100011 2.368912e-01 5.357143e-01        -        - 5.485501e-01        - #> snp100012 8.633120e-01 6.817714e-01        -        -            -        - #> snp100013 2.135289e-01 6.014125e-01        -        - 5.082171e-01        - #> snp100014 5.099591e-01 2.658422e-02        -        - 4.544511e-02        - #> snp100015 3.392081e-01 3.868141e-01        -        - 3.280926e-01        - #> snp100016            -            -        -        -            -        - #> snp100017 6.302184e-01 9.820450e-01        -        - 6.910914e-01        - #> snp100018 6.768420e-01 9.741930e-01        -        - 7.015578e-01        - #> snp100019 3.897605e-01 2.224098e-02        -        - 4.495981e-02        - #> snp100020 6.520872e-02 6.517794e-01        -        - 7.214439e-01        - #> snp100021            -            -        -        -            -        - #> snp100022            -            -        -        -            -        - #> snp100023 6.968389e-01 8.963233e-01        -        - 6.226672e-01        - #> snp100024 4.884427e-02 5.702336e-01        -        - 8.438538e-01        - #> snp100025            -            -        -        -            -        - #> snp100026            -            -        -        -            -        - #> snp100027 7.715635e-01 8.371635e-01        -        - 7.906414e-01        - #> snp100028 3.303998e-01 1.727867e-02        -        - 3.613544e-02        - #> snp100029 6.142783e-02 5.787776e-01        -        - 8.414861e-01        - #> snp100030            -            -        -        -            -        - #> snp100031            -            -        -        -            -        - #> snp100032 4.202964e-01 1.751823e-02        -        - 2.970118e-02        - #> snp100033 3.669970e-01 1.752377e-02        -        - 3.915088e-02        - #> snp100034 6.142783e-02 5.787776e-01        -        - 8.414861e-01        - #> snp100035            -            -        -        -            -        - #>           snp10007     snp10008     snp10009 snp100010    snp100011 #> snp10001         - 6.696834e-03 2.149023e-01         -            - #> snp10002         - 6.619872e-02            -         -            - #> snp10003         -            -            -         -            - #> snp10004         -            -            -         -            - #> snp10005         - 6.418922e-01 8.552267e-01         -            - #> snp10006         -            -            -         -            - #> snp10007         -            -            -         -            - #> snp10008         - 6.821467e-03 6.832344e-02         -            - #> snp10009         - 5.716083e-01 5.287493e-01         -            - #> snp100010        -            -            -         -            - #> snp100011        - 3.511670e-01 5.751970e-01         - 4.589649e-01 #> snp100012        - 7.467940e-01 4.682158e-01         - 5.487577e-01 #> snp100013        -            - 5.386258e-01         - 3.628729e-01 #> snp100014        - 1.427060e-01 4.209787e-02         - 4.856592e-01 #> snp100015        - 1.721229e-01 4.489670e-01         - 4.905181e-01 #> snp100016        -            -            -         -            - #> snp100017        - 5.589776e-01 7.063467e-01         - 5.488168e-01 #> snp100018        - 6.000575e-01 7.245951e-01         - 5.568399e-01 #> snp100019        - 1.283628e-01 3.730746e-02         - 2.400497e-01 #> snp100020        - 9.334851e-01 5.759617e-01         - 3.508449e-01 #> snp100021        -            -            -         -            - #> snp100022        -            -            -         -            - #> snp100023        - 5.996302e-01 4.407722e-01         - 5.644078e-01 #> snp100024        - 1.021393e-01 4.261018e-01         - 2.407210e-01 #> snp100025        -            -            -         -            - #> snp100026        -            -            -         -            - #> snp100027        - 7.940902e-01 8.915613e-01         - 8.804983e-01 #> snp100028        - 1.417013e-01 3.009650e-02         - 2.150670e-01 #> snp100029        - 1.691600e-01 4.385478e-01         - 2.461341e-01 #> snp100030        -            -            -         -            - #> snp100031        -            -            -         -            - #> snp100032        - 1.135763e-01 3.234258e-02         - 2.095486e-01 #> snp100033        - 1.921551e-01 2.858233e-02         - 2.133066e-01 #> snp100034        - 1.691600e-01 4.385478e-01         - 2.461341e-01 #> snp100035        -            -            -         -            - #>              snp100012    snp100013    snp100014    snp100015 snp100016 #> snp10001  6.889347e-01 9.354028e-03 1.735178e-02 1.099236e-01         - #> snp10002  4.389125e-01 1.899131e-02 1.234552e-01 7.451739e-01         - #> snp10003             -            -            -            -         - #> snp10004             -            -            -            -         - #> snp10005             - 3.496875e-01 2.597077e-02 8.451659e-01         - #> snp10006             -            -            -            -         - #> snp10007             -            -            -            -         - #> snp10008  5.848843e-01            - 2.075947e-01 2.208514e-01         - #> snp10009  8.446591e-01 2.737757e-02 7.863128e-02 6.934662e-01         - #> snp100010            -            -            -            -         - #> snp100011            -            -            -            -         - #> snp100012 4.449500e-01 3.826471e-01 2.139640e-02 8.024806e-01         - #> snp100013 4.945476e-01 6.885502e-03 1.612775e-01 1.950745e-01         - #> snp100014 5.168423e-02 2.941462e-01 2.679608e-03 2.676494e-01         - #> snp100015 3.891748e-01 1.461877e-01 3.012714e-01 9.801430e-02         - #> snp100016            -            -            -            -         - #> snp100017 6.910914e-01 5.359562e-01 3.351417e-02 4.041933e-01         - #> snp100018 6.910914e-01 5.754818e-01 3.139837e-02 4.010073e-01         - #> snp100019 5.746758e-02 3.569632e-01 6.564835e-01 3.114235e-01         - #> snp100020 7.464991e-01 9.384833e-01 1.421897e-01 1.729088e-01         - #> snp100021            -            -            -            -         - #> snp100022            -            -            -            -         - #> snp100023 6.145815e-01 5.722436e-01 3.679985e-02 4.202413e-01         - #> snp100024 8.136464e-01 1.778693e-01 6.253818e-01 3.090167e-01         - #> snp100025            -            -            -            -         - #> snp100026            -            -            -            -         - #> snp100027 7.914964e-01 7.309267e-01 1.642048e-01 7.271022e-01         - #> snp100028 4.705503e-02 3.552020e-01 9.500878e-01 3.429989e-01         - #> snp100029 8.127763e-01 2.540857e-01 6.131685e-01 2.958782e-01         - #> snp100030            -            -            -            -         - #> snp100031            -            -            -            -         - #> snp100032 3.974142e-02 3.619493e-01 9.084926e-01 3.560261e-01         - #> snp100033 4.395203e-02 3.692095e-01 9.479968e-01 3.229849e-01         - #> snp100034 8.127763e-01 2.540857e-01 6.131685e-01 2.958782e-01         - #> snp100035            -            -            -            -         - #>              snp100017    snp100018    snp100019    snp100020 snp100021 #> snp10001  3.783108e-01 3.425332e-01 2.418124e-02 5.956813e-03         - #> snp10002             -            - 1.815181e-01 6.923692e-02         - #> snp10003             -            -            -            -         - #> snp10004             -            -            -            -         - #> snp10005  7.562038e-01 7.657621e-01 4.464383e-02 6.647032e-01         - #> snp10006             -            -            -            -         - #> snp10007             -            -            -            -         - #> snp10008  1.132206e-01 1.000883e-01 3.918941e-01            -         - #> snp10009             -            - 1.396688e-01 7.066177e-02         - #> snp100010            -            -            -            -         - #> snp100011            -            -            -            -         - #> snp100012 7.562038e-01 7.562038e-01 4.960213e-02 6.068072e-01         - #> snp100013 5.343952e-02 4.709161e-02 2.735989e-01            -         - #> snp100014 2.942214e-02 3.446199e-02 1.489199e-01 1.980417e-01         - #> snp100015 7.137196e-01 7.377261e-01 2.871851e-01 2.177089e-01         - #> snp100016            -            -            -            -         - #> snp100017 4.963831e-01            - 5.141641e-02 1.177174e-01         - #> snp100018            - 4.962120e-01 5.860739e-02 1.038642e-01         - #> snp100019 3.072569e-02 2.948224e-02 1.359351e-03 3.761162e-01         - #> snp100020 5.628384e-01 6.038411e-01 1.270252e-01 6.678842e-03         - #> snp100021            -            -            -            -         - #> snp100022            -            -            -            -         - #> snp100023 9.765884e-01 9.949049e-01 3.310708e-02 6.033700e-01         - #> snp100024 3.805020e-01 4.267376e-01 4.378718e-01 1.389866e-01         - #> snp100025            -            -            -            -         - #> snp100026            -            -            -            -         - #> snp100027 5.269279e-01 5.350482e-01 1.837214e-01 8.004665e-01         - #> snp100028 2.372217e-02 2.266297e-02 7.084730e-01 1.401932e-01         - #> snp100029 3.955657e-01 4.433216e-01 4.242976e-01 1.422981e-01         - #> snp100030            -            -            -            -         - #> snp100031            -            -            -            -         - #> snp100032 2.594819e-02 2.475956e-02 7.176673e-01 1.121549e-01         - #> snp100033 2.109276e-02 2.007121e-02 7.105935e-01 1.909070e-01         - #> snp100034 3.955657e-01 4.433216e-01 4.242976e-01 1.422981e-01         - #> snp100035            -            -            -            -         - #>           snp100022    snp100023    snp100024 snp100025 snp100026    snp100027 #> snp10001          - 1.759115e-01 2.190610e-01         -         - 3.859336e-01 #> snp10002          -            - 4.404684e-02         -         - 3.471787e-01 #> snp10003          -            -            -         -         -            - #> snp10004          -            -            -         -         -            - #> snp10005          - 8.028614e-01 4.134252e-01         -         - 6.063786e-01 #> snp10006          -            -            -         -         -            - #> snp10007          -            -            -         -         -            - #> snp10008          - 5.195236e-02 1.557111e-01         -         - 1.208457e-01 #> snp10009          -            - 7.377818e-02         -         - 2.610984e-01 #> snp100010         -            -            -         -         -            - #> snp100011         -            -            -         -         -            - #> snp100012         - 7.924558e-01 4.608779e-01         -         - 5.973138e-01 #> snp100013         - 2.316251e-02 2.071657e-01         -         - 5.704428e-02 #> snp100014         - 1.093428e-01 9.133693e-02         -         - 3.173861e-02 #> snp100015         - 6.374251e-01 1.380589e-01         -         - 7.058202e-01 #> snp100016         -            -            -         -         -            - #> snp100017         -            - 1.439832e-01         -         -            - #> snp100018         -            - 1.249499e-01         -         -            - #> snp100019         - 1.870073e-01 1.209365e-01         -         - 4.469611e-02 #> snp100020         - 5.398495e-02 1.412935e-01         -         - 1.245762e-01 #> snp100021         -            -            -         -         -            - #> snp100022         -            -            -         -         -            - #> snp100023         - 5.097385e-01 5.810040e-02         -         - 3.376927e-01 #> snp100024         - 4.627997e-01 2.952291e-05         -         - 1.484825e-01 #> snp100025         -            -            -         -         -            - #> snp100026         -            -            -         -         -            - #> snp100027         - 8.462742e-01 4.762022e-01         -         - 8.243179e-01 #> snp100028         - 2.538636e-02 3.605720e-01         -         - 8.533672e-02 #> snp100029         - 4.758048e-01 8.741189e-01         -         - 5.007700e-01 #> snp100030         -            -            -         -         -            - #> snp100031         -            -            -         -         -            - #> snp100032         - 2.838136e-02 4.521028e-01         -         - 9.027902e-02 #> snp100033         - 2.355943e-02 4.536201e-01         -         - 7.492806e-02 #> snp100034         - 4.758048e-01 8.741189e-01         -         - 5.007700e-01 #> snp100035         -            -            -         -         -            - #>              snp100028    snp100029 snp100030 snp100031    snp100032 #> snp10001  1.127494e-01 1.482694e-01         -         - 1.757136e-01 #> snp10002  3.974836e-01 6.903890e-02         -         - 6.093970e-01 #> snp10003             -            -         -         -            - #> snp10004             -            -         -         -            - #> snp10005  1.433657e-01 5.639037e-01         -         - 2.621144e-01 #> snp10006             -            -         -         -            - #> snp10007             -            -         -         -            - #> snp10008  6.776210e-01 2.910676e-01         -         - 8.324053e-01 #> snp10009  3.198715e-01 1.078102e-01         -         - 5.114070e-01 #> snp100010            -            -         -         -            - #> snp100011            -            -         -         -            - #> snp100012 1.532151e-01 6.196015e-01         -         - 2.743120e-01 #> snp100013 5.489813e-01 3.934006e-01         -         - 5.812264e-01 #> snp100014 2.285224e-01 1.766377e-01         -         - 1.670624e-01 #> snp100015 2.527117e-01 1.392761e-01         -         - 2.649574e-01 #> snp100016            -            -         -         -            - #> snp100017 1.526128e-01 1.995682e-01         -         - 3.056448e-01 #> snp100018 1.721069e-01 1.749173e-01         -         - 3.360731e-01 #> snp100019            - 2.468219e-01         -         -            - #> snp100020 6.606801e-01 3.373467e-01         -         - 8.180937e-01 #> snp100021            -            -         -         -            - #> snp100022            -            -         -         -            - #> snp100023 3.756690e-01 8.663188e-02         -         - 6.034518e-01 #> snp100024 3.780584e-01            -         -         - 4.866831e-01 #> snp100025            -            -         -         -            - #> snp100026            -            -         -         -            - #> snp100027 7.428161e-02 2.032815e-01         -         - 1.708456e-01 #> snp100028 9.000483e-04 3.008845e-01         -         -            - #> snp100029 3.455797e-01 3.171590e-05         -         - 4.308061e-01 #> snp100030            -            -         -         -            - #> snp100031            -            -         -         -            - #> snp100032 5.299065e-01 4.333545e-01         -         - 1.162862e-03 #> snp100033            - 4.420381e-01         -         - 5.064174e-01 #> snp100034 3.455797e-01            -         -         - 4.333545e-01 #> snp100035            -            -         -         -            - #>              snp100033    snp100034 snp100035 #> snp10001  1.157790e-01 1.482694e-01         - #> snp10002  5.047714e-01 6.903890e-02         - #> snp10003             -            -         - #> snp10004             -            -         - #> snp10005  2.095183e-01 5.639037e-01         - #> snp10006             -            -         - #> snp10007             -            -         - #> snp10008  6.442526e-01 2.910676e-01         - #> snp10009  3.745937e-01 1.078102e-01         - #> snp100010            -            -         - #> snp100011            -            -         - #> snp100012 1.828445e-01 6.196015e-01         - #> snp100013 5.758674e-01 3.934006e-01         - #> snp100014 2.284796e-01 1.766377e-01         - #> snp100015 2.526977e-01 1.392761e-01         - #> snp100016            -            -         - #> snp100017 2.000038e-01 1.995682e-01         - #> snp100018 2.236951e-01 1.749173e-01         - #> snp100019            - 2.468219e-01         - #> snp100020 6.276484e-01 3.373467e-01         - #> snp100021            -            -         - #> snp100022            -            -         - #> snp100023 4.408255e-01 8.663188e-02         - #> snp100024 4.195639e-01            -         - #> snp100025            -            -         - #> snp100026            -            -         - #> snp100027 9.942862e-02 2.032815e-01         - #> snp100028            - 3.008845e-01         - #> snp100029 3.483480e-01            -         - #> snp100030            -            -         - #> snp100031            -            -         - #> snp100032            - 4.308061e-01         - #> snp100033 7.862255e-04 3.483480e-01         - #> snp100034 4.420381e-01 3.171590e-05         - #> snp100035            -            -         - plot(ansCod) #> Error in plot.new(): figure margins too large"},{"path":"/reference/intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ORs and 95% confidence intervals for an object of class 'haplo.glm' — intervals","title":"Print ORs and 95% confidence intervals for an object of class 'haplo.glm' — intervals","text":"Print ORs confidence intervals object class 'haplo.glm'","code":""},{"path":"/reference/intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ORs and 95% confidence intervals for an object of class 'haplo.glm' — intervals","text":"","code":"intervals(o, level=.95, ...)"},{"path":"/reference/intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ORs and 95% confidence intervals for an object of class 'haplo.glm' — intervals","text":"o object class 'haplo.glm' level significance level. Default 95 percent ... arguments","code":""},{"path":"/reference/intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print ORs and 95% confidence intervals for an object of class 'haplo.glm' — intervals","text":"intervals object ORs 95% confidence intervals object class 'haplo.glm'","code":""},{"path":"/reference/intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ORs and 95% confidence intervals for an object of class 'haplo.glm' — intervals","text":"","code":"# Not Run library(SNPassoc) library(haplo.stats)  data(asthma, package = \"SNPassoc\")  asthma.s <- setupSNP(data=asthma, colSNPs=7:ncol(asthma), sep=\"\") trait <- asthma.s$casecontrol snpsH <- c(\"rs714588\", \"rs1023555\",  \"rs898070\") genoH <- make.geno(asthma.s, snpsH)  mod <- haplo.stats:: haplo.glm( trait ~ genoH,                                            family=\"binomial\",                                  locus.label=snpsH,                                 allele.lev=attributes(genoH)$unique.alleles,                                 control = haplo.glm.control(haplo.freq.min=0.05))    intervals(mod) #>                freq   or   95%   C.I.   P-val  #>          ATG 0.4405   1.00 Reference haplotype  #>          GAA 0.0827   1.09 (   0.77 -   1.56 )  0.6160  #>          GAG 0.0841   0.99 (   0.69 -   1.42 )  0.9642  #>          GTA 0.2080   1.06 (   0.84 -   1.34 )  0.6379  #>          GTG 0.0769   1.09 (   0.76 -   1.58 )  0.6367  #>   genoH.rare 0.1079   1.15 (   0.83 -   1.59 )  0.3968  summary(mod) #> $coeficients #>                      coe        se            z         p #> (Intercept) -1.374180506 0.1211946 -11.33862441 0.0000000 #> genoH.5      0.090087893 0.1796507   0.50146146 0.6160464 #> genoH.6     -0.008206857 0.1828843  -0.04487457 0.9642073 #> genoH.7      0.056070961 0.1191460   0.47060715 0.6379213 #> genoH.8      0.088213192 0.1867696   0.47231017 0.6367054 #> genoH.rare   0.139609483 0.1647541   0.84738119 0.3967827 #>"},{"path":"/reference/isMonomorphic.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a SNP is Monomorphic — is.Monomorphic","title":"Check whether a SNP is Monomorphic — is.Monomorphic","text":"function verifies SNP Monomorphic","code":""},{"path":"/reference/isMonomorphic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a SNP is Monomorphic — is.Monomorphic","text":"","code":"is.Monomorphic(x)"},{"path":"/reference/isMonomorphic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a SNP is Monomorphic — is.Monomorphic","text":"x R object","code":""},{"path":"/reference/isMonomorphic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a SNP is Monomorphic — is.Monomorphic","text":"logical value TRUE SNP Monomorphic, otherwise FALSE","code":""},{"path":"/reference/isMonomorphic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a SNP is Monomorphic — is.Monomorphic","text":"","code":"data(SNPs) is.Monomorphic(SNPs$snp10001) #> [1] FALSE is.Monomorphic(SNPs$snp100020) #> [1] FALSE apply(SNPs[,20:30],2,is.Monomorphic) #> snp100015 snp100016 snp100017 snp100018 snp100019 snp100020 snp100021 snp100022  #>     FALSE      TRUE     FALSE     FALSE     FALSE     FALSE      TRUE      TRUE  #> snp100023 snp100024 snp100025  #>     FALSE     FALSE      TRUE"},{"path":"/reference/LD.html","id":null,"dir":"Reference","previous_headings":"","what":"max-statistic for a 2x3 table — LD","title":"max-statistic for a 2x3 table — LD","text":"Compute pairwise linkage disequilibrium genetic markers","code":""},{"path":"/reference/LD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"max-statistic for a 2x3 table — LD","text":"","code":"LD(g1, ...)  # S3 method for snp LD(g1, g2, ...)  # S3 method for setupSNP LD(g1, SNPs, ...)   LDplot(x, digits = 3, marker, distance, which = c(\"D\", \"D'\",     \"r\", \"X^2\", \"P-value\", \"n\", \" \"), ...)  LDtable(x, colorcut = c(0, 0.01, 0.025, 0.05, 0.1, 1),         colors = heat.colors(length(colorcut)),        textcol = \"black\", digits = 3, show.all = FALSE,         which = c(\"D\", \"D'\", \"r\", \"X^2\", \"P-value\", \"n\"),         colorize = \"P-value\", cex, ...)"},{"path":"/reference/LD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"max-statistic for a 2x3 table — LD","text":"g1 genotype object dataframe containing genotype objects g2 genotype object (ignored g1 dataframe) SNPs columns containing SNPs x LD LD.data.frame object digits Number significant digits display Name(s) LD information items displayed colorcut P-value cutoffs points colorizing LDtable colors Colors P-value cutoff given 'colorcut' LDtable textcol Color text labels LDtable marker Marker used 'comparator' LDplot.  omitted separate           lines marker displayed distance Marker location, used locating markers LDplot. show.TRUE, show rows/columns matrix. Otherwise omit           completely blank rows/columns. colorize LD parameter used determining table cell colors cex Scaling factor table text. absent, text scaled           fit within table cells. ... Optional arguments ('plot.LD.data.frame' passes           'LDtable' 'LDplot').","code":""},{"path":"/reference/LD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"max-statistic for a 2x3 table — LD","text":"genetics R package Gregory Warnes et al.  (warnes@bst.rochester.edu)","code":""},{"path":"/reference/LD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"max-statistic for a 2x3 table — LD","text":"functions adapted LD, LDtable LDplot package genetics Gregory Warnes et al.  (warnes@bst.rochester.edu)","code":""},{"path":"/reference/LD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"max-statistic for a 2x3 table — LD","text":"None","code":""},{"path":[]},{"path":"/reference/makegeno.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a group of locus objects from some SNPs, assign to 'model.matrix' class. — make.geno","title":"Create a group of locus objects from some SNPs, assign to 'model.matrix' class. — make.geno","text":"function prepares CRITICAL element corresponding matrix genotypes necessary included 'haplo.glm' function.","code":""},{"path":"/reference/makegeno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a group of locus objects from some SNPs, assign to 'model.matrix' class. — make.geno","text":"","code":"make.geno(data, SNPs.sel)"},{"path":"/reference/makegeno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a group of locus objects from some SNPs, assign to 'model.matrix' class. — make.geno","text":"data object class 'setupSNP' containing SNPs used estimate haplotypes. SNPs.sel vector indicating names SNPs used estimate haplotypes","code":""},{"path":"/reference/makegeno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a group of locus objects from some SNPs, assign to 'model.matrix' class. — make.geno","text":"'setupGeno' function, 'haplo.stats' library, returns","code":""},{"path":[]},{"path":"/reference/makegeno.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a group of locus objects from some SNPs, assign to 'model.matrix' class. — make.geno","text":"","code":"## Not run: data(SNPs) # first, we create an object of class 'setupSNP' datSNP<-setupSNP(SNPs,6:40,sep=\"\") geno<-make.geno(datSNP,c(\"snp10001\",\"snp10002\",\"snp10003\")) ## End(Not run)"},{"path":"/reference/maxstat.html","id":null,"dir":"Reference","previous_headings":"","what":"max-statistic for a 2x3 table — maxstat","title":"max-statistic for a 2x3 table — maxstat","text":"Computes asymptotic p-value max-statistic 2x3 table","code":""},{"path":"/reference/maxstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"max-statistic for a 2x3 table — maxstat","text":"","code":"maxstat(x, ...)  # S3 method for default maxstat(x, y, ...)  # S3 method for table maxstat(x, ...)  # S3 method for setupSNP maxstat(x, y, colSNPs=attr(x,\"colSNPs\"), ...)  # S3 method for matrix maxstat(x, ...)"},{"path":"/reference/maxstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"max-statistic for a 2x3 table — maxstat","text":"x numeric matrix 2 rows (cases/controls) 3 colums (genotypes) vector case/control status            object class 'setupSNP'. y optional numeric vector containing information given SNP.            case 'x' argument must contain vector indicarting case/control status. 'x' argument object             class 'setupSNP' argument migth name variable containing case/control information. colSNPs vector indicating columns contain SNPs compute max-statistic. default                  max-statistic computed SNPs specified object class 'setupSNP'                  created. ... arguments passed methods.","code":""},{"path":"/reference/maxstat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"max-statistic for a 2x3 table — maxstat","text":"Gonzalez JR, Carrasco JL, Dudbridge F, Armengol L, Estivill X, Moreno V. Maximizing association statistics  genetic models (2007). Submitted Sladek R, Rocheleau G, Rung J et al. genome-wide association study identifies novel risk loci type 2 diabetes (2007). Nature 445, 881-885","code":""},{"path":"/reference/maxstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"max-statistic for a 2x3 table — maxstat","text":"matrix chi-square statistic dominant, recessive, log-additive max-statistic    asymptotic p-value.","code":""},{"path":[]},{"path":"/reference/maxstat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"max-statistic for a 2x3 table — maxstat","text":"","code":"# example from Sladek et al. (2007) for the SNP rs1111875   tt<-matrix(c(77,298,310,122,316,231),nrow=2,ncol=3,byrow=TRUE)  maxstat(tt) #>      dominant recessive log-additive MAX-statistic   Pr(>z)     #> [1,]   13.298    16.275       22.019        22.019 3.76e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1   data(SNPs)  maxstat(SNPs$casco,SNPs$snp10001)  #>      dominant recessive log-additive MAX-statistic Pr(>z) #> [1,]    1.209     1.559        0.286         1.559  0.384  myDat<-setupSNP(SNPs,6:40,sep=\"\")  maxstat(myDat,casco) #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP only has 2 genotypes #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #> Warning: this SNP is monomorphic #>           dominant recessive log-additive MAX-statistic Pr(>z) #> snp10001     1.559     1.209        0.286         1.559  0.384 #> snp10002     0.012     1.479        0.068         1.479  0.411 #> snp10003         -         -            -             -      - #> snp10004         -         -            -             -      - #> snp10005     0.013     0.491        0.005         0.491  0.741 #> snp10006         -         -            -             -      - #> snp10007         -         -            -             -      - #> snp10008     0.173     0.286        0.017         0.286  0.831 #> snp10009     0.019     1.429        0.053         1.429  0.424 #> snp100010        -         -            -             -      - #> snp100011    0.258     0.007        0.147         0.258  0.818 #> snp100012    0.022     0.444        0.094         0.444  0.762 #> snp100013    0.620     0.425        0.126         0.620  0.670 #> snp100014    0.588     0.327        0.043         0.588  0.685 #> snp100015    0.005     0.005        0.005         0.005  0.946 #> snp100016        -         -            -             -      - #> snp100017    0.046     1.379        0.026         1.379  0.437 #> snp100018    0.103     1.429        0.005         1.429  0.425 #> snp100019    1.264     0.370        0.155         1.264  0.451 #> snp100020    0.279     0.286        0.047         0.286  0.832 #> snp100021        -         -            -             -      - #> snp100022        -         -            -             -      - #> snp100023    0.017     1.473        0.060         1.473  0.412 #> snp100024    1.012     0.508        0.209         1.012  0.528 #> snp100025        -         -            -             -      - #> snp100026        -         -            -             -      - #> snp100027    0.223     1.451        0.004         1.451  0.420 #> snp100028    1.186     0.540        0.080         1.186  0.470 #> snp100029    0.378     0.508        0.025         0.508  0.719 #> snp100030        -         -            -             -      - #> snp100031        -         -            -             -      - #> snp100032    0.737     0.540        0.019         0.737  0.619 #> snp100033    0.885     0.664        0.018         0.885  0.564 #> snp100034    0.378     0.508        0.025         0.508  0.719 #> snp100035        -         -            -             -      -"},{"path":"/reference/odds.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract odds ratios, 95% CI and pvalues — odds","title":"Extract odds ratios, 95% CI and pvalues — odds","text":"Extract odds ratios, 95","code":""},{"path":"/reference/odds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract odds ratios, 95% CI and pvalues — odds","text":"","code":"odds(x, model=c(\"log-additive\", \"dominant\", \"recessive\", \"overdominant\", \"codominant\"),        sorted=c(\"no\",\"p-value\",\"or\"))"},{"path":"/reference/odds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract odds ratios, 95% CI and pvalues — odds","text":"x object class 'WGassociation' output WGassociation model model extracted. first one used. first letter enough, low upper case. sorted Sort output P value .","code":""},{"path":"/reference/odds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract odds ratios, 95% CI and pvalues — odds","text":"matrix 95% CI (lower, upper) P value selected model. codominant model, 95%CI given heterozygous homozigous.","code":""},{"path":"/reference/odds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract odds ratios, 95% CI and pvalues — odds","text":"JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5.","code":""},{"path":"/reference/odds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract odds ratios, 95% CI and pvalues — odds","text":"","code":"data(SNPs)  datSNP<-setupSNP(SNPs,6:40,sep=\"\")  ans<-WGassociation(casco~1,data=datSNP,model=\"all\")  odds(ans) #>             OR lower upper p-value.log-additive #> snp10001  0.87  0.51  1.47            0.5944774 #> snp10002  1.14  0.62  2.12            0.4243295 #> snp10003    NA    NA    NA                   NA #> snp10004    NA    NA    NA                   NA #> snp10005  1.08  0.57  2.05            0.6754367 #> snp10006    NA    NA    NA                   NA #> snp10007    NA    NA    NA                   NA #> snp10008  0.96  0.54  1.71            0.8977044 #> snp10009  1.13  0.61  2.11            0.4200611 #> snp100010   NA    NA    NA                   NA #> snp100011 1.18  0.18  7.74            0.6588959 #> snp100012 1.18  0.61  2.26            0.7663941 #> snp100013 0.90  0.51  1.61            0.7241389 #> snp100014 1.05  0.64  1.74            0.8360019 #> snp100015 0.96  0.28  3.28            0.9455409 #> snp100016   NA    NA    NA                   NA #> snp100017 1.11  0.59  2.08            0.4372008 #> snp100018 1.08  0.58  2.01            0.4391106 #> snp100019 1.10  0.68  1.78            0.6936263 #> snp100020 0.94  0.53  1.66            0.8287678 #> snp100021   NA    NA    NA                   NA #> snp100022   NA    NA    NA                   NA #> snp100023 1.14  0.61  2.12            0.4202437 #> snp100024 0.89  0.53  1.49            0.6493129 #> snp100025   NA    NA    NA                   NA #> snp100026   NA    NA    NA                   NA #> snp100027 1.03  0.55  1.92            0.3749605 #> snp100028 1.07  0.67  1.72            0.7768353 #> snp100029 0.96  0.57  1.62            0.8746585 #> snp100030   NA    NA    NA                   NA #> snp100031   NA    NA    NA                   NA #> snp100032 1.03  0.65  1.65            0.8907923 #> snp100033 1.03  0.64  1.66            0.8920509 #> snp100034 0.96  0.57  1.62            0.8746585 #> snp100035   NA    NA    NA                   NA"},{"path":"/reference/permTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation test analysis — permTest","title":"Permutation test analysis — permTest","text":"function extract p values permutation approach performed using scanWGassociation function","code":""},{"path":"/reference/permTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation test analysis — permTest","text":"","code":"permTest(x, method=\"minimum\", K)"},{"path":"/reference/permTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation test analysis — permTest","text":"x required object class 'WGassociation' attribute 'permTest'. See details method statistic used permutation test. default 'minimum' 'rtp' (rank truncated product)     also available. K number K significant p values total number test performed (e.g number SNPs) used             compute rank truncated product. argument required method='rtp'. See references","code":""},{"path":"/reference/permTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Permutation test analysis — permTest","text":"function extract p values object class 'WGassociation'. object migth obtained using   funcion called 'scanWGassociation' indicating number permutations argument 'nperm'.","code":""},{"path":"/reference/permTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation test analysis — permTest","text":"object class 'permTest'. 'print' returns summary indicating number SNPs analyzed, number valid SNPs (non-Monomorphic    pass calling rate), p value Bonferroni correction, p values based permutation approach.    One based considering empirical percentil minimum p values, another one assuming    minimum p values follow beta distribution. 'plot' produces plot empirical distribution minimum p values (histogram) expected distribution   assuming beta distribution. corrected p value also showed plot. See examples illustration previous issues.","code":""},{"path":"/reference/permTest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permutation test analysis — permTest","text":"Dudbridge F, Gusnanto Koeleman BPC. Detecting multiple associations genome-wide studies.   Human Genomics, 2006;2:310-317. Dudbridge F Koeleman BPC. Efficient computation significance levels multiple associations large studies  correlated data, including genomewide association studies. J Hum Genet, 2004;75:424-435. JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5.","code":""},{"path":[]},{"path":"/reference/permTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation test analysis — permTest","text":"","code":"library(SNPassoc)  data(asthma, package = \"SNPassoc\") asthma.s <- setupSNP(data=asthma, colSNPs=7:ncol(asthma), sep=\"\")  ans <- WGassociation(casecontrol, data=asthma.s)"},{"path":"/reference/plotMissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of missing genotypes — plotMissing","title":"Plot of missing genotypes — plotMissing","text":"Plot grid showing genotypes missing","code":""},{"path":"/reference/plotMissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of missing genotypes — plotMissing","text":"","code":"plotMissing(x, print.labels.SNPs = TRUE,          main = \"Genotype missing data\", ...)"},{"path":"/reference/plotMissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of missing genotypes — plotMissing","text":"x object class 'setupSNP' print.labels.SNPs labels SNPs printed? main title place plot ... extra arguments 'image' function","code":""},{"path":"/reference/plotMissing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of missing genotypes — plotMissing","text":"function uses 'image' function plot grid black pixels genotypes      missing.","code":""},{"path":[]},{"path":"/reference/plotMissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of missing genotypes — plotMissing","text":"return value, just plot","code":""},{"path":"/reference/plotMissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of missing genotypes — plotMissing","text":"","code":"data(SNPs)  data(SNPs.info.pos)   ans<-setupSNP(SNPs,colSNPs=6:40,sep=\"\")  plotMissing(ans) #> Warning: 'drop' argument will be ignored     # The same plot with the SNPs sorted by genomic position and   # showing the information about chromosomes   ans<-setupSNP(SNPs,colSNPs=6:40,sort=TRUE,SNPs.info.pos,sep=\"\")   plotMissing(ans) #> Warning: 'drop' argument will be ignored"},{"path":"/reference/plotWGassociation.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","title":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","text":"Function plot -log p values object class 'WGassociation'","code":""},{"path":"/reference/plotWGassociation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","text":"","code":"# S3 method for WGassociation plot(x, ...)"},{"path":"/reference/plotWGassociation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","text":"x object class 'WGassociation' ... graphical parameters","code":""},{"path":"/reference/plotWGassociation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","text":"panel different plots (one mode inheritance) plotted. represents    -log(p value) SNP. Two horizontal lines also plotted. One one indicates nominal    statistical significance level whereas one indicates statistical    significance level Bonferroni correction.","code":""},{"path":"/reference/plotWGassociation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","text":"JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5.","code":""},{"path":"/reference/plotWGassociation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","text":"return value, just plot","code":""},{"path":[]},{"path":"/reference/plotWGassociation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot -log p values from an object of class 'WGassociation' — plot.WGassociation","text":"","code":"library(SNPassoc)  data(asthma, package = \"SNPassoc\") asthma.s <- setupSNP(data=asthma, colSNPs=7:ncol(asthma), sep=\"\")  ans <- WGassociation(casecontrol, data=asthma.s)  plot(ans) #> Warning: Use of `dat$SNP` is discouraged. Use `SNP` instead. #> Warning: Use of `dat$p.value` is discouraged. Use `p.value` instead."},{"path":"/reference/qqpval.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for inspecting population substructure — qqpval","title":"Functions for inspecting population substructure — qqpval","text":"function plots ranked observed p values corresponding expected p values -log scale.","code":""},{"path":"/reference/qqpval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for inspecting population substructure — qqpval","text":"","code":"qqpval(p, pch=16, col=4, ...)"},{"path":"/reference/qqpval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for inspecting population substructure — qqpval","text":"p vector p values pch symbol use points col color points ... plot arguments","code":""},{"path":"/reference/qqpval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for inspecting population substructure — qqpval","text":"return value, just plot","code":""},{"path":[]},{"path":"/reference/qqpval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for inspecting population substructure — qqpval","text":"","code":"data(SNPs) datSNP<-setupSNP(SNPs,6:40,sep=\"\") res<-WGassociation(casco,datSNP,model=c(\"do\",\"re\",\"log-add\"))  # observed vs expected p values for recessive model qqpval(recessive(res))"},{"path":"/reference/related.html","id":null,"dir":"Reference","previous_headings":"","what":"Get related samples — related","title":"Get related samples — related","text":"Get related samples","code":""},{"path":"/reference/related.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get related samples — related","text":"","code":"related(x)"},{"path":"/reference/related.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get related samples — related","text":"x object obtained SNPrelate package.","code":""},{"path":"/reference/related.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get related samples — related","text":"matrix related individuals.","code":""},{"path":"/reference/related.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get related samples — related","text":"","code":"library(SNPassoc)   data(SNPs)"},{"path":"/reference/resHapMap.html","id":null,"dir":"Reference","previous_headings":"","what":"SNPs from HapMap project — resHapMap","title":"SNPs from HapMap project — resHapMap","text":"Information 9307 SNPs HapMap project     belonging 22 chromosomes. Information two different population available:         European population (CEU) Yoruba (YRI). genomic     information (names SNPs, chromosomes genetic position)     also available data frame called 'HapMap.SNPs.pos'.","code":""},{"path":"/reference/resHapMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNPs from HapMap project — resHapMap","text":"","code":"data(resHapMap)"},{"path":"/reference/resHapMap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SNPs from HapMap project — resHapMap","text":"data frame 120 observations 9808 variables (SNPs) one variable     called 'group' indicating population.","code":""},{"path":"/reference/resHapMap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SNPs from HapMap project — resHapMap","text":"HapMap project (http://www.hapmap.org)","code":""},{"path":"/reference/resHapMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SNPs from HapMap project — resHapMap","text":"","code":"data(resHapMap)"},{"path":"/reference/scanWGassociation.html","id":null,"dir":"Reference","previous_headings":"","what":"Whole genome association analysis — scanWGassociation","title":"Whole genome association analysis — scanWGassociation","text":"function obsolete due problems gfotran compiler.    Use 'WGassociation' function instead send e-mail maintainer    receiving version including function","code":""},{"path":"/reference/setupSNP.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert columns in a dataframe to class 'snp' — setupSNP","title":"Convert columns in a dataframe to class 'snp' — setupSNP","text":"setupSNP Convert columns dataframe class 'snp' summary.setupSNP gives summary object class 'setupSNP' including                       allele names, major allele frequencie, exact thest Hardy-Weinberg                       equilibrium percentage missing genotypes","code":""},{"path":"/reference/setupSNP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert columns in a dataframe to class 'snp' — setupSNP","text":"","code":"setupSNP(data, colSNPs, sort = FALSE, info, sep = \"/\", ...)"},{"path":"/reference/setupSNP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert columns in a dataframe to class 'snp' — setupSNP","text":"data dataframe containing columns SNPs converted colSNPs Vector specifying columns contain SNPs data sort SNPs sorted. Default FALSE info sort TRUE dataframe containing information         SNPs regarding genomic position gene         located sep character separator used divide alleles genotypes ... optional arguments","code":""},{"path":"/reference/setupSNP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert columns in a dataframe to class 'snp' — setupSNP","text":"dataframe class 'setupSNP' containing converted SNP variables.   variables unchanged.","code":""},{"path":"/reference/setupSNP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert columns in a dataframe to class 'snp' — setupSNP","text":"JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5.","code":""},{"path":[]},{"path":"/reference/setupSNP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert columns in a dataframe to class 'snp' — setupSNP","text":"","code":"data(SNPs)  myDat<-setupSNP(SNPs,6:40,sep=\"\")   #sorted SNPs and having genomic information  data(SNPs.info.pos)  myDat.o<-setupSNP(SNPs,6:40,sep=\"\",sort=TRUE, info=SNPs.info.pos)  # summary  summary(myDat.o) #>           alleles major.allele.freq HWE      missing (%) #> snp10004  G       100.0             -         0.6        #> snp10007  C       100.0             -         0.0        #> snp100010 T       100.0             -         6.4        #> snp10002  C/A      72.0             0.004945  0.0        #> snp10003  G       100.0             -         8.3        #> snp10008  C/G      80.3             0.137802  0.0        #> snp10005  G/A      75.8             0.008020  0.0        #> snp10006  A       100.0             -         0.0        #> snp10001  T/C      75.5             0.281639  0.0        #> snp10009  A/G      71.5             0.002848  0.6        #> snp100015 G/A      95.9             1.000000  0.0        #> snp100013 A/G      81.7             0.025588  7.6        #> snp100012 G/C      76.1             0.013399  1.3        #> snp100011 G/C      98.7             0.019139  0.0        #> snp100014 C/A      58.2             1.000000  2.5        #> snp100020 G/A      80.6             0.125355  0.0        #> snp100022 A       100.0             -         0.6        #> snp100017 T/C      70.0             0.000518  1.3        #> snp100016 G       100.0             -         3.2        #> snp100021 G       100.0             -         0.0        #> snp100019 G/C      55.7             0.746284  0.0        #> snp100018 T/C      69.9             0.000498  0.6        #> snp100027 C/G      70.3             0.000896  1.3        #> snp100029 G/A      75.6             0.048709  0.6        #> snp100023 T/A      71.4             0.002842  1.9        #> snp100026 G       100.0             -         0.6        #> snp100035 T       100.0             -         7.0        #> snp100033 G/A      54.9             0.326373  3.2        #> snp100031 T       100.0             -        35.0        #> snp100025 C       100.0             -         0.0        #> snp100030 A       100.0             -         0.0        #> snp100034 T/C      75.6             0.048709  0.6        #> snp100032 G/A      55.8             0.258909  0.6        #> snp100028 T/C      55.1             0.419687  0.6        #> snp100024 T/C      74.7             0.092210  0.6         # plot one SNP   plot(myDat,which=2)"},{"path":"/reference/snp.html","id":null,"dir":"Reference","previous_headings":"","what":"SNP object — snp","title":"SNP object — snp","text":"snp creates snp object returns TRUE x class 'snp' attempts coerce argument object class 'snp' reorder change reference genotype summary gives summary object class 'snp' including genotype                      allele frequencies exact thest Hardy-Weinberg                       equilibrium plot    gives summary object class 'snp' including genotype                      allele frequencies exact thest Hardy-Weinberg                       equilibrium plot. Barplot pie allowed [.snp   copy [.factor modified preserve attributes","code":""},{"path":"/reference/snp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNP object — snp","text":"","code":"snp(x, sep = \"/\", name.genotypes, reorder=\"common\",      remove.spaces = TRUE, allow.partial.missing = FALSE)     is.snp(x)     as.snp(x, ...)    # S3 method for snp additive(o)"},{"path":"/reference/snp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SNP object — snp","text":"x either object class 'snp' object converted class 'snp' sep character separator used divide alleles x vector strings               string holds alleles. default \"/\". See details. name.genotypes codes genotypes. argument may useful genotypes           coded using three different codes (e.g., 0,1,2 hom1, het, hom2) reorder genotypes within individual reordered. Possible values    'common' 'minor'. default      reorder=\"common\". case, alleles sorted within individual     common homozygous. remove.spaces logical indicating whether spaces tabs           removed genotypes processing allow.partial.missing logical indicating whether one allele           permitted missing.  set 'FALSE' alleles           set 'NA' either missing. o object class 'snp' coded linear covariate: 0,1,2 ... optional arguments","code":""},{"path":"/reference/snp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SNP object — snp","text":"SNP objects hold information gene marker alleles   observed different individuals.  individual, two alleles   recorded. snp class considers stored alleles unordered , .e., \"C/T\"   equivalent \"T/C\". assumes order alleles important. snp called, x character vector,     assumed element encodes alleles. case,     sep character string, x assumed coded     \"Allele1<sep>Allele2\".  sep numeric value,     assumed character locations 1:sep contain allele 1     remaining locations contain allele 2. additive.snp recodes SNPs analyzed linear covariate (codes 0,1,2)","code":""},{"path":"/reference/snp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SNP object — snp","text":"JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5.","code":""},{"path":"/reference/snp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SNP object — snp","text":"snp class extends \"factor\" levels character vector possible     genotype values stored coded paste( allele1, \"\", allele2, sep=\"/\")","code":""},{"path":[]},{"path":"/reference/snp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SNP object — snp","text":"","code":"# some examples of snp data in different formats  dat1  <- c(\"21\", \"21\", \"11\", \"22\", \"21\",                     \"22\", \"22\", \"11\", \"11\", NA) ans1  <- snp(dat1,sep=\"\") ans1 #>  [1] 2/1  2/1  1/1  2/2  2/1  2/2  2/2  1/1  1/1  <NA> #> Genotypes: 1/1 2/1 2/2 #> Alleles:  2 1   dat2 <- c(\"A/A\",\"A/G\",\"G/G\",\"A/G\",\"G/G\",                     \"A/A\",\"A/A\",\"G/G\",NA) ans2  <- snp(dat2,sep=\"/\") ans2 #> [1] A/A  A/G  G/G  A/G  G/G  A/A  A/A  G/G  <NA> #> Genotypes: A/A A/G G/G #> Alleles:  A G   dat3 <- c(\"C-C\",\"C-T\",\"C-C\",\"T-T\",\"C-C\",                     \"C-C\",\"C-C\",\"C-C\",\"T-T\",NA) ans3 <- snp(dat3,sep=\"-\") ans3 #>  [1] C/C  C/T  C/C  T/T  C/C  C/C  C/C  C/C  T/T  <NA> #> Genotypes: C/C C/T T/T #> Alleles:  C T    dat4 <- c(\"het\",\"het\",\"het\",\"hom1\",\"hom2\",                     \"het\",\"het\",\"hom1\",\"hom1\",NA) ans4 <- snp(dat4,name.genotypes=c(\"hom1\",\"het\",\"hom2\")) ans4 #>  [1] A/B  A/B  A/B  A/A  B/B  A/B  A/B  A/A  A/A  <NA> #> Genotypes: A/A A/B B/B #> Alleles:  A B    # summary  summary(ans3) #> Genotypes:  #>      frequency percentage #> C/C          6   66.66667 #> C/T          1   11.11111 #> T/T          2   22.22222 #> NA's         1            #>  #> Alleles:  #>      frequency percentage #> C           13   72.22222 #> T            5   27.77778 #> NA's         2            #>  #> HWE (p value): 0.05882353   # plots  plot(ans3)  plot(ans3,type=pie)  plot(ans3,type=pie,label=\"SNP 10045\")"},{"path":"/reference/SNPassoc-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal SNPstat functions — SNPassoc-internal","title":"Internal SNPstat functions — SNPassoc-internal","text":"Internal SNPassoc functions","code":""},{"path":"/reference/SNPassoc-internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal SNPstat functions — SNPassoc-internal","text":"","code":"association.fit(var, dep, adj, quantitative, type, level,         nIndiv, genotypingRate = 0, ...)  extractPval(x) extractPval.i(i,x,pos,models) SNPHWE(x) GenotypeRate(x) haplo.inter.fit(geno, var2, dep, adj = NULL, fam,            haplo.freq.min, ...) crea.lab(x,pos.ini,cex,dist) orderChromosome(x) togeno(f,sep=sep,lab=lab) expandsetupSNP(o) pvalTest(dataX,Y,quantitative,type,genotypingRate) modelTest(X,Y,quantitative,type,genotypingRate) assoc(y,x,test=\"lrt\",quantitative) trim(s) interleave(..., append.source=TRUE, sep=\": \", drop=FALSE) # S3 method for default codominant(o) # S3 method for default dominant(o) # S3 method for default recessive(o) # S3 method for default overdominant(o) # S3 method for default additive(o)"},{"path":"/reference/SNPassoc-internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal SNPstat functions — SNPassoc-internal","text":"return value, internal calls","code":""},{"path":"/reference/SNPassoc-internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal SNPstat functions — SNPassoc-internal","text":"called user","code":""},{"path":"/reference/SNPs.html","id":null,"dir":"Reference","previous_headings":"","what":"SNPs in a case-control study — SNPs","title":"SNPs in a case-control study — SNPs","text":"SNPs data.frame contains selected SNPs clinical covariates cases controls      case-control study SNPs.info.pos data.frame contains names SNPs included data set 'SNPs' including     chromosome genomic position","code":""},{"path":"/reference/SNPs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNPs in a case-control study — SNPs","text":"","code":"data(SNPs)"},{"path":"/reference/SNPs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SNPs in a case-control study — SNPs","text":"'SNPs' data.frame contains following columns:","code":""},{"path":"/reference/SNPs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SNPs in a case-control study — SNPs","text":"Data obtained department. reference details supplied published.","code":""},{"path":"/reference/SNPs.info.pos.html","id":null,"dir":"Reference","previous_headings":"","what":"SNPs in a case-control study — SNPs.info.pos","title":"SNPs in a case-control study — SNPs.info.pos","text":"SNPs data.frame contains selected SNPs clinical covariates cases controls      case-control study SNPs.info.pos data.frame contains names SNPs included data set 'SNPs' including     chromosome genomic position","code":""},{"path":"/reference/SNPs.info.pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SNPs in a case-control study — SNPs.info.pos","text":"","code":"data(SNPs.info.pos)"},{"path":"/reference/SNPs.info.pos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SNPs in a case-control study — SNPs.info.pos","text":"'SNPs.info.pos' data.frame contains following columns:         data frame 35 observations following 3 variables. snp name SNP chr name chromosome pos genomic position","code":""},{"path":"/reference/SNPs.info.pos.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SNPs in a case-control study — SNPs.info.pos","text":"Data obtained department. reference details supplied published.","code":""},{"path":"/reference/sortSNPs.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort a vector of SNPs by genomic position — sortSNPs","title":"Sort a vector of SNPs by genomic position — sortSNPs","text":"function sorts vector position SNPs data frame   using another data frame contains information SNPs,    chromosome, genomic position","code":""},{"path":"/reference/sortSNPs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort a vector of SNPs by genomic position — sortSNPs","text":"","code":"sortSNPs(data, colSNPs, info)"},{"path":"/reference/sortSNPs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort a vector of SNPs by genomic position — sortSNPs","text":"data required data frame SNPs colSNPs required vector indicating columns 'data' contains genotype data info required data frame genomic information SNPs (chromosome position).        first column must SNPs, second one chromosome third one genomic         position.","code":""},{"path":"/reference/sortSNPs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sort a vector of SNPs by genomic position — sortSNPs","text":"First , function obtains vector SNPs sorted using data frame genomic    positions (see 'dataSNPs.pos' argument).   , columns indicate information    genotypes data frame, sorted using vector. information useful WGassociation function called since    allow user summaryze results SNPs sorted genomic position","code":""},{"path":"/reference/sortSNPs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort a vector of SNPs by genomic position — sortSNPs","text":"vector indicating colums SNPs recorded data frame ('data' argument), sorted   using genomic positions listed 'dataSNPs.pos' argument)","code":""},{"path":"/reference/sortSNPs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort a vector of SNPs by genomic position — sortSNPs","text":"","code":"# # data(SNPs) # data(SNPs.info.pos) # colSNPs.order<-sortSNPs(SNPs,c(6:40),SNPs.info.pos) #"},{"path":"/reference/tableHWE.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Hardy-Weinberg Equilibrium — tableHWE","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"Test null hypothesis Hardy-Weinberg equilibrium holds cases,    controls populations. print print information. Number digits, significance                level can changed","code":""},{"path":"/reference/tableHWE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"","code":"tableHWE(x, strata, ...)"},{"path":"/reference/tableHWE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"x object class 'setupSNP' strata factor variable stratified analysis ... optional arguments","code":""},{"path":"/reference/tableHWE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"function calculates HWE test variables class 'snp' object x    class 'setupSNP'","code":""},{"path":"/reference/tableHWE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"matrix p values Hardy-Weinberg Equilibrium","code":""},{"path":"/reference/tableHWE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"function based R function computes exact SNP test Hardy-Weinberg Equilibrium  written Wigginton JE, Cutler DJ Abecasis GR available http://csg.sph.umich.edu/abecasis/Exact/r_instruct.html","code":""},{"path":[]},{"path":"/reference/tableHWE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"Wigginton JE, Cutler DJ Abecasis GR (2005). note exact tests Hardy-Weinberg equilibrium. J Hum Genet 76:887-93","code":""},{"path":"/reference/tableHWE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for Hardy-Weinberg Equilibrium — tableHWE","text":"","code":"data(SNPs) ans<-setupSNP(SNPs,6:40,sep=\"\") res<-tableHWE(ans) print(res) #>           HWE (p value) flag #> snp10001  0.2816             #> snp10002  0.0049        <-   #> snp10003  -                  #> snp10004  -                  #> snp10005  0.0080        <-   #> snp10006  -                  #> snp10007  -                  #> snp10008  0.1378             #> snp10009  0.0028        <-   #> snp100010 -                  #> snp100011 0.0191        <-   #> snp100012 0.0134        <-   #> snp100013 0.0256        <-   #> snp100014 1.0000             #> snp100015 -                  #> snp100016 -                  #> snp100017 0.0005        <-   #> snp100018 0.0005        <-   #> snp100019 0.7463             #> snp100020 0.1254             #> snp100021 -                  #> snp100022 -                  #> snp100023 0.0028        <-   #> snp100024 0.0922             #> snp100025 -                  #> snp100026 -                  #> snp100027 0.0009        <-   #> snp100028 0.4197             #> snp100029 0.0487        <-   #> snp100030 -                  #> snp100031 -                  #> snp100032 0.2589             #> snp100033 0.3264             #> snp100034 0.0487        <-   #> snp100035 -                  #change the significance level showed in the flag column print(res,sig=0.001) #>           HWE (p value) flag #> snp10001  0.2816             #> snp10002  0.0049             #> snp10003  -                  #> snp10004  -                  #> snp10005  0.0080             #> snp10006  -                  #> snp10007  -                  #> snp10008  0.1378             #> snp10009  0.0028             #> snp100010 -                  #> snp100011 0.0191             #> snp100012 0.0134             #> snp100013 0.0256             #> snp100014 1.0000             #> snp100015 -                  #> snp100016 -                  #> snp100017 0.0005        <-   #> snp100018 0.0005        <-   #> snp100019 0.7463             #> snp100020 0.1254             #> snp100021 -                  #> snp100022 -                  #> snp100023 0.0028             #> snp100024 0.0922             #> snp100025 -                  #> snp100026 -                  #> snp100027 0.0009        <-   #> snp100028 0.4197             #> snp100029 0.0487             #> snp100030 -                  #> snp100031 -                  #> snp100032 0.2589             #> snp100033 0.3264             #> snp100034 0.0487             #> snp100035 -                    #stratified analysis res<-tableHWE(ans,ans$sex) print(res) #>           all.groups   Male Female #> snp10001      0.2816 0.3941 0.7388 #> snp10002      0.0049 0.1660 0.0075 #> snp10003           -      -      - #> snp10004           -      -      - #> snp10005      0.0080 0.2755 0.0257 #> snp10006           -      -      - #> snp10007           -      -      - #> snp10008      0.1378 0.5078 0.2342 #> snp10009      0.0028 0.0992 0.0075 #> snp100010          -      -      - #> snp100011     0.0191 1.0000 0.0184 #> snp100012     0.0134 0.2761 0.0255 #> snp100013     0.0256 0.1206 0.2051 #> snp100014     1.0000 0.8101 0.6456 #> snp100015          -      -      - #> snp100016          -      -      - #> snp100017     0.0005 0.0304 0.0068 #> snp100018     0.0005 0.0304 0.0066 #> snp100019     0.7463 1.0000 0.5012 #> snp100020     0.1254 0.5078 0.2141 #> snp100021          -      -      - #> snp100022          -      -      - #> snp100023     0.0028 0.0972 0.0123 #> snp100024     0.0922 0.1551 0.5197 #> snp100025          -      -      - #> snp100026          -      -      - #> snp100027     0.0009 0.0304 0.0123 #> snp100028     0.4197 1.0000 0.2619 #> snp100029     0.0487 0.0772 0.5065 #> snp100030          -      -      - #> snp100031          -      -      - #> snp100032     0.2589 0.8170 0.1834 #> snp100033     0.3264 0.8139 0.2619 #> snp100034     0.0487 0.0772 0.5065 #> snp100035          -      -      -"},{"path":"/reference/Tablemeanse.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive sample size, mean, and standard error — Table.mean.se","title":"Descriptive sample size, mean, and standard error — Table.mean.se","text":"function computes sample size, mean standard error quantitative trait   genotype (combination genotypes)","code":""},{"path":"/reference/Tablemeanse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive sample size, mean, and standard error — Table.mean.se","text":"","code":"Table.mean.se(var, dep, subset = !is.na(var))"},{"path":"/reference/Tablemeanse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive sample size, mean, and standard error — Table.mean.se","text":"var quantitative trait dep variable genotypes combination subset optional vector specifying subset observations used descriptive analysis","code":""},{"path":"/reference/Tablemeanse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive sample size, mean, and standard error — Table.mean.se","text":"tp matrix giving sample size (n), median () standard error (se) genotype","code":""},{"path":[]},{"path":"/reference/Tablemeanse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive sample size, mean, and standard error — Table.mean.se","text":"","code":"data(SNPs) # sample size, mean age and standard error for each genotype Table.mean.se(SNPs$snp10001,SNPs$protein) #> $tp #>     n       me       se #> CC 12 27413.36 6060.738 #> CT 53 38987.48 3176.928 #> TT 92 47419.13 2393.450 #>   # The same table for a subset (males) Table.mean.se(SNPs$snp10001,SNPs$protein,SNPs$sex==\"Male\") #> $tp #>     n       me       se #> CC  8 31418.20 8641.447 #> CT 27 42394.63 4389.230 #> TT 40 47692.29 3793.065 #>   # The same table assuming a dominant model Table.mean.se(dominant(snp(SNPs$snp10001,sep=\"\")),SNPs$protein,SNPs$sex==\"Male\") #> $tp #>          n       me       se #> T/T     40 47692.29 3793.065 #> C/T-C/C 35 39885.73 3937.494 #>"},{"path":"/reference/TableNPer.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive sample size and percentage — Table.N.Per","title":"Descriptive sample size and percentage — Table.N.Per","text":"function computes sample size percentage category categorical trait (e.g.   case-control status) genotype (combination genotypes).","code":""},{"path":"/reference/TableNPer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive sample size and percentage — Table.N.Per","text":"","code":"Table.N.Per(var, dep, subset = !is.na(var))"},{"path":"/reference/TableNPer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive sample size and percentage — Table.N.Per","text":"var categorical trait. dep variable genotypes combination subset optional vector specifying subset observations used descriptive analysis.","code":""},{"path":"/reference/TableNPer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive sample size and percentage — Table.N.Per","text":"tp matrix giving sample size (n),percentage (%) level categorical trait    genotype","code":""},{"path":[]},{"path":"/reference/TableNPer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive sample size and percentage — Table.N.Per","text":"","code":"data(SNPs) #sample size and percentage of cases and controls for each genotype  Table.N.Per(SNPs$snp10001,SNPs$casco) #> $tp #>     0    %  1    % #> CC  2  4.3 10  9.1 #> CT 21 44.7 32 29.1 #> TT 24 51.1 68 61.8 #>   # The same table for a subset (males) Table.N.Per(SNPs$snp10001,SNPs$casco,SNPs$sex==\"Male\") #> $tp #>     0    %  1    % #> CC  0  0.0  8 14.8 #> CT 10 47.6 17 31.5 #> TT 11 52.4 29 53.7 #>   # The same table assuming a dominant model Table.N.Per(dominant(snp(SNPs$snp10001,sep=\"\")),SNPs$casco,SNPs$sex==\"Male\") #> $tp #>          0    %  1    % #> T/T     11 52.4 29 53.7 #> C/T-C/C 10 47.6 25 46.3 #>"},{"path":"/reference/WGassociation.html","id":null,"dir":"Reference","previous_headings":"","what":"Whole genome association analysis — WGassociation","title":"Whole genome association analysis — WGassociation","text":"function carries whole genome association analysis SNPs   dependent variable (phenotype) five different genetic models (inheritance patterns):    codominant, dominant, recessive, overdominant log-additive. phenotype may quantitative    categorical. second case (e.g. case-control studies) variable must class 'factor'    two levels.","code":""},{"path":"/reference/WGassociation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Whole genome association analysis — WGassociation","text":"","code":"WGassociation(formula, data, model = c(\"all\"),                   quantitative = is.quantitative(formula, data),                  genotypingRate = 80, level = 0.95, ...)"},{"path":"/reference/WGassociation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Whole genome association analysis — WGassociation","text":"formula either symbolic description model fited (formula object) without SNP                 name response variable case fitting single models (e.g. unadjusted models).                 might either continuous variable (quantitative traits)                  factor variable (case-control studies) response left ~                  operator terms additional covariates right ~ operator may                  added fit adjusted model (e.g., ~var1+var2+...+varN+SNP). See details data required dataframe class 'setupSNP' containing variables model SNPs model character string specifying type genetic model (mode inheritance) SNP.                 indicates genotypes collapsed. Possible                values \"codominant\", \"dominant\", \"recessive\", \"overdominant\", \"log-additive\" \"\". default                \"\" fits 5 possible genetic models. first words required, e.g \"co\", \"\", etc. quantitative logical value indicating whether phenotype (                      left operator ~ 'formula' argument) quantitative. function                        '.quantitative' returns FALSE phenotype                       variable two categories (.e. indicating case-control status). Thus,                       required argument may modified user. genotypingRate minimum percentage genotype rate given SNP included analysis.                   Default 80%. level signification level confidence intervals. Defaul 95%. ... arguments passed glm function","code":""},{"path":"/reference/WGassociation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Whole genome association analysis — WGassociation","text":"function assesses association response variable included left side    'formula' SNPs included 'data' argument adjusted variables included    right side 'formula'. Different genetic models may analyzed using 'model' argument.","code":""},{"path":"/reference/WGassociation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Whole genome association analysis — WGassociation","text":"object class 'WGassociation'. 'summary' returns summary table groups defined info (genes/chromosomes). 'WGstats' returns detailed output, similar produced association. 'pvalues' 'print' return table p-values genetic model SNP.   first column indicates whether problem genotyping present. 'plot' produces plot p values -log scale. See plot.WGassociation   details. 'labels' returns names SNPs analyzed. functions 'codominat', 'dominant', 'recessive', 'overdominant' 'additive'   used obtain p values genetic models. See examples illustration previous issues.","code":""},{"path":"/reference/WGassociation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Whole genome association analysis — WGassociation","text":"JR Gonzalez, L Armengol, X Sole, E Guino, JM Mercader, X Estivill, V Moreno. SNPassoc: R package perform whole genome association studies. Bioinformatics, 2007;23(5):654-5.","code":""},{"path":[]},{"path":"/reference/WGassociation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Whole genome association analysis — WGassociation","text":"","code":"data(SNPs) datSNP<-setupSNP(SNPs,6:40,sep=\"\") ansAll<-WGassociation(protein~1,data=datSNP,model=\"all\")  # In that case the formula is not required. You can also write: # ansAll<-WGassociation(protein,data=datSNP,model=\"all\")   #only codominant and log-additive ansCoAd<-WGassociation(protein~1,data=datSNP,model=c(\"co\",\"log-add\"))  #for printing p values print(ansAll) #>           comments    codominant dominant recessive overdominant log-additive #> snp10001  -           0.00586    0.00516  0.01605   0.12306      0.00140      #> snp10002  -           0.78555    0.93303  0.48704   0.87288      0.76846      #> snp10003  Monomorphic -          -        -         -            -            #> snp10004  Monomorphic -          -        -         -            -            #> snp10005  -           0.63306    0.43881  0.50130   0.55427      0.37267      #> snp10006  Monomorphic -          -        -         -            -            #> snp10007  Monomorphic -          -        -         -            -            #> snp10008  -           0.20627    0.30005  0.08652   0.83655      0.13493      #> snp10009  -           0.74736    0.87204  0.47815   0.68152      0.93616      #> snp100010 Monomorphic -          -        -         -            -            #> snp100011 -           0.30538    0.12921  0.27289   0.28415      0.12787      #> snp100012 -           0.70573    0.58360  0.47929   0.72341      0.48994      #> snp100013 -           0.14971    0.09878  0.11040   0.38420      0.05475      #> snp100014 -           0.03796    0.01511  0.11952   0.27139      0.01245      #> snp100015 -           0.02626    -        -         -            -            #> snp100016 Monomorphic -          -        -         -            -            #> snp100017 -           0.70644    0.79126  0.45966   0.59972      0.99917      #> snp100018 -           0.75290    0.88692  0.47815   0.69529      0.92129      #> snp100019 -           0.02401    0.00749  0.14775   0.19168      0.01024      #> snp100020 -           0.21002    0.31381  0.08652   0.86338      0.14135      #> snp100021 Monomorphic -          -        -         -            -            #> snp100022 Monomorphic -          -        -         -            -            #> snp100023 -           0.77537    0.99544  0.48195   0.79887      0.82695      #> snp100024 -           0.00724    0.01774  0.00548   0.42442      0.00263      #> snp100025 Monomorphic -          -        -         -            -            #> snp100026 Monomorphic -          -        -         -            -            #> snp100027 -           0.92849    0.71496  0.94900   0.69971      0.75864      #> snp100028 -           0.01480    0.00504  0.08758   0.23535      0.00545      #> snp100029 -           0.00859    0.02183  0.00548   0.47601      0.00333      #> snp100030 Monomorphic -          -        -         -            -            #> snp100031 Genot 65%   -          -        -         -            -            #> snp100032 -           0.01943    0.00656  0.09656   0.23993      0.00717      #> snp100033 -           0.01253    0.00455  0.06839   0.26544      0.00428      #> snp100034 -           0.00859    0.02183  0.00548   0.47601      0.00333      #> snp100035 Monomorphic -          -        -         -            -            print(ansCoAd) #>           comments    codominant log-additive #> snp10001  -           0.00586    0.00140      #> snp10002  -           0.78555    0.76846      #> snp10003  Monomorphic -          -            #> snp10004  Monomorphic -          -            #> snp10005  -           0.63306    0.37267      #> snp10006  Monomorphic -          -            #> snp10007  Monomorphic -          -            #> snp10008  -           0.20627    0.13493      #> snp10009  -           0.74736    0.93616      #> snp100010 Monomorphic -          -            #> snp100011 -           0.30538    0.12787      #> snp100012 -           0.70573    0.48994      #> snp100013 -           0.14971    0.05475      #> snp100014 -           0.03796    0.01245      #> snp100015 -           0.02626    -            #> snp100016 Monomorphic -          -            #> snp100017 -           0.70644    0.99917      #> snp100018 -           0.75290    0.92129      #> snp100019 -           0.02401    0.01024      #> snp100020 -           0.21002    0.14135      #> snp100021 Monomorphic -          -            #> snp100022 Monomorphic -          -            #> snp100023 -           0.77537    0.82695      #> snp100024 -           0.00724    0.00263      #> snp100025 Monomorphic -          -            #> snp100026 Monomorphic -          -            #> snp100027 -           0.92849    0.75864      #> snp100028 -           0.01480    0.00545      #> snp100029 -           0.00859    0.00333      #> snp100030 Monomorphic -          -            #> snp100031 Genot 65%   -          -            #> snp100032 -           0.01943    0.00717      #> snp100033 -           0.01253    0.00428      #> snp100034 -           0.00859    0.00333      #> snp100035 Monomorphic -          -             #for obtaining a matrix with the p palues pvalAll<-pvalues(ansAll) pvalCoAd<-pvalues(ansCoAd)  # when all models are fitted and we are interested in obtaining  # p values for different genetic models  # codominant model pvalCod<-codominant(ansAll)  # recessive model pvalRec<-recessive(ansAll)  # and the same for additive, dominant or overdominant   #summary summary(ansAll) #>  SNPs (n) Genot error (%) Monomorphic (%) Significant* (n) (%) #>        35               0            34.3                0   0 #>  #>  *Number of statistically significant associations at level 1e-06  #for a detailed report WGstats(ansAll) #> $snp10001 #>  #> SNP: snp10001  adjusted by:  #>                n    me   se    dif  lower   upper  p-value  AIC #> Codominant                                                      #> T/T           92 47419 2393      0                0.005861 3602 #> C/T           53 38987 3177  -8432 -16165  -698.2               #> C/C           12 27413 6061 -20006 -33770 -6241.5               #> Dominant                                                        #> T/T           92 47419 2393      0                0.005165 3603 #> C/T-C/C       65 36851 2858 -10568 -17870 -3266.8               #> Recessive                                                       #> T/T-C/T      145 44337 1935      0                0.016048 3605 #> C/C           12 27413 6061 -16924 -30549 -3298.9               #> Overdominant                                                    #> T/T-C/C      104 45111 2308      0                0.123062 3608 #> C/T           53 38987 3177  -6123 -13864  1617.1               #> log-Additive                                                    #> 0,1,2                        -9332 -14955 -3708.6 0.001404 3601 #>  #> $snp10002 #>  #> SNP: snp10002  adjusted by:  #>                n    me   se    dif  lower upper p-value  AIC #> Codominant                                                   #> C/C           74 42876 2890    0.0               0.7855 3612 #> A/C           78 42740 2576 -135.8  -7648  7377              #> A/A            5 50262 6879 7385.6 -14006 28777              #> Dominant                                                     #> C/C           74 42876 2890    0.0               0.9330 3611 #> A/C-A/A       83 43193 2456  317.3  -7072  7706              #> Recessive                                                    #> C/C-A/C      152 42806 1924    0.0               0.4870 3610 #> A/A            5 50262 6879 7455.3 -13518 28429              #> Overdominant                                                 #> C/C-A/A       79 43343 2742    0.0               0.8729 3611 #> A/C           78 42740 2576 -603.2  -7980  6773              #> log-Additive                                                 #> 0,1,2                        996.5  -5626  7619  0.7685 3611 #>  #> $snp10003 #>  #> SNP: snp10003  adjusted by:  #> Monomorphic #>  #> $snp10004 #>  #> SNP: snp10004  adjusted by:  #> Monomorphic #>  #> $snp10005 #>  #> SNP: snp10005  adjusted by:  #>                n    me    se   dif  lower upper p-value  AIC #> Codominant                                                   #> G/G           84 41685  2598     0               0.6331 3612 #> A/G           70 44286  2804  2601  -4880 10083              #> A/A            3 52119 10583 10434 -16729 37598              #> Dominant                                                     #> G/G           84 41685  2598     0               0.4388 3610 #> A/G-A/A       73 44608  2718  2923  -4458 10304              #> Recessive                                                    #> G/G-A/G      154 42867  1902     0               0.5013 3610 #> A/A            3 52119 10583  9252 -17651 36155              #> Overdominant                                                 #> G/G-A/A       87 42044  2534     0               0.5543 3611 #> A/G           70 44286  2804  2241  -5171  9654              #> log-Additive                                                 #> 0,1,2                         3127  -3729  9984  0.3727 3610 #>  #> $snp10006 #>  #> SNP: snp10006  adjusted by:  #> Monomorphic #>  #> $snp10007 #>  #> SNP: snp10007  adjusted by:  #> Monomorphic #>  #> $snp10008 #>  #> SNP: snp10008  adjusted by:  #>                n    me   se      dif  lower upper p-value  AIC #> Codominant                                                     #> C/C          104 44436 2239      0.0              0.20627 3610 #> C/G           44 42421 3699  -2015.3 -10269  6238              #> G/G            9 30004 8185 -14432.0 -30379  1514              #> Dominant                                                       #> C/C          104 44436 2239      0.0              0.30005 3610 #> C/G-G/G       53 40312 3401  -4123.8 -11897  3649              #> Recessive                                                      #> C/C-C/G      148 43837 1914      0.0              0.08652 3608 #> G/G            9 30004 8185 -13832.9 -29550  1884              #> Overdominant                                                   #> C/C-G/G      113 43286 2182      0.0              0.83655 3611 #> C/G           44 42421 3699   -865.8  -9078  7346              #> log-Additive                                                   #> 0,1,2                        -4721.9 -10880  1436 0.13493 3609 #>  #> $snp10009 #>  #> SNP: snp10009  adjusted by:  #>                n    me   se     dif  lower upper p-value  AIC #> Codominant                                                    #> A/A           72 43225 2942     0.0               0.7474 3589 #> A/G           79 42130 2553 -1095.1  -8637  6446              #> G/G            5 50262 6879  7036.7 -14370 28443              #> Dominant                                                      #> A/A           72 43225 2942     0.0               0.8720 3588 #> A/G-G/G       84 42614 2437  -611.0  -8034  6812              #> Recessive                                                     #> A/A-A/G      151 42652 1931     0.0               0.4782 3588 #> G/G            5 50262 6879  7609.7 -13367 28586              #> Overdominant                                                  #> A/A-G/G       77 43682 2786     0.0               0.6815 3588 #> A/G           79 42130 2553 -1552.0  -8950  5846              #> log-Additive                                                  #> 0,1,2                         272.5  -6384  6929  0.9362 3588 #>  #> $snp100010 #>  #> SNP: snp100010  adjusted by:  #> Monomorphic #>  #> $snp100011 #>  #> SNP: snp100011  adjusted by:  #>                n    me   se    dif  lower upper p-value  AIC #> Codominant                                                   #> G/G          154 43441 1898      0               0.3054 3610 #> C/G            2 25303  796 -18138 -50884 14608              #> C/C            1 17280    0 -26162 -72323 19999              #> Dominant                                                     #> G/G          154 43441 1898      0               0.1292 3609 #> C/G-C/C        3 22629 2714 -20813 -47555  5930              #> Recessive                                                    #> G/G-C/G      156 43209 1881      0               0.2729 3610 #> C/C            1 17280    0 -25929 -72115 20256              #> Overdominant                                                 #> G/G-C/C      155 43273 1893      0               0.2841 3610 #> C/G            2 25303  796 -17969 -50739 14800              #> log-Additive                                                 #> 0,1,2                       -14752 -33641  4136  0.1279 3609 #>  #> $snp100012 #>  #> SNP: snp100012  adjusted by:  #>                n    me    se   dif  lower upper p-value  AIC #> Codominant                                                   #> G/G           84 41685  2598     0               0.7057 3564 #> C/G           68 43388  2807  1704  -5795  9203              #> C/C            3 52119 10583 10434 -16576 37444              #> Dominant                                                     #> G/G           84 41685  2598     0               0.5836 3563 #> C/G-C/C       71 43757  2721  2073  -5323  9469              #> Recessive                                                    #> G/G-C/G      152 42447  1902     0               0.4793 3562 #> C/C            3 52119 10583  9672 -17058 36402              #> Overdominant                                                 #> G/G-C/C       87 42044  2534     0               0.7234 3563 #> C/G           68 43388  2807  1344  -6086  8774              #> log-Additive                                                 #> 0,1,2                         2422  -4438  9283  0.4899 3563 #>  #> $snp100013 #>  #> SNP: snp100013  adjusted by:  #>                n    me   se    dif  lower   upper p-value  AIC #> Codominant                                                     #> A/A          101 44101 2274      0                0.14971 3330 #> A/G           35 39006 3968  -5096 -13978 3786.72              #> G/G            9 30004 8185 -14097 -29851 1655.53              #> Dominant                                                       #> A/A          101 44101 2274      0                0.09878 3329 #> A/G-G/G       44 37164 3572  -6937 -15119 1245.49              #> Recessive                                                      #> A/A-A/G      136 42790 1976      0                0.11040 3330 #> G/G            9 30004 8185 -12786 -28387 2814.54              #> Overdominant                                                   #> A/A-G/G      110 42948 2213      0                0.38420 3331 #> A/G           35 39006 3968  -3942 -12794 4909.72              #> log-Additive                                                   #> 0,1,2                        -6209 -12492   74.44 0.05475 3328 #>  #> $snp100014 #>  #> SNP: snp100014  adjusted by:  #>                n    me   se   dif   lower upper p-value  AIC #> Codominant                                                   #> C/C           52 36181 3505     0               0.03796 3515 #> A/C           74 44761 2280  8580   359.1 16802              #> A/A           27 48998 5330 12817  2039.5 23594              #> Dominant                                                     #> C/C           52 36181 3505     0               0.01511 3514 #> A/C-A/A      101 45894 2188  9713  1967.0 17459              #> Recessive                                                    #> C/C-A/C      126 41220 1998     0               0.11952 3517 #> A/A           27 48998 5330  7777 -1958.7 17513              #> Overdominant                                                 #> C/C-A/A       79 40561 3000     0               0.27139 3518 #> A/C           74 44761 2280  4200 -3257.1 11657              #> log-Additive                                                 #> 0,1,2                        6759  1521.6 11996 0.01245 3513 #>  #> $snp100015 #>  #> SNP: snp100015  adjusted by:  #>                n    me   se   dif lower upper p-value  AIC #> Codominant                                                 #> G/G          144 41795 1879     0             0.02626 3606 #> A/G           13 56875 8303 15080  1908 28253              #> log-Additive                                               #> 0,1,2                       15080  1908 28253         3606 #>  #> $snp100016 #>  #> SNP: snp100016  adjusted by:  #> Monomorphic #>  #> $snp100017 #>  #> SNP: snp100017  adjusted by:  #>                n    me   se       dif  lower upper p-value  AIC #> Codominant                                                      #> T/T           67 43206 3131     0.000               0.7064 3564 #> C/T           83 41713 2403 -1492.727  -9043  6057              #> C/C            5 50262 6879  7055.818 -14255 28367              #> Dominant                                                        #> T/T           67 43206 3131     0.000               0.7913 3563 #> C/T-C/C       88 42199 2303 -1007.014  -8451  6437              #> Recessive                                                       #> T/T-C/T      150 42380 1924     0.000               0.4597 3562 #> C/C            5 50262 6879  7881.794 -12958 28721              #> Overdominant                                                    #> T/T-C/C       72 43696 2952     0.000               0.5997 3563 #> C/T           83 41713 2403 -1982.715  -9372  5407              #> log-Additive                                                    #> 0,1,2                          -3.555  -6688  6681  0.9992 3563 #>  #> $snp100018 #>  #> SNP: snp100018  adjusted by:  #>                n    me   se     dif  lower upper p-value  AIC #> Codominant                                                    #> T/T           67 43206 3131     0.0               0.7529 3589 #> C/T           84 42210 2426  -995.6  -8578  6586              #> C/C            5 50262 6879  7055.8 -14403 28515              #> Dominant                                                      #> T/T           67 43206 3131     0.0               0.8869 3588 #> C/T-C/C       89 42662 2324  -543.3  -8019  6933              #> Recessive                                                     #> T/T-C/T      151 42652 1931     0.0               0.4782 3588 #> C/C            5 50262 6879  7609.7 -13367 28586              #> Overdominant                                                  #> T/T-C/C       72 43696 2952     0.0               0.6953 3588 #> C/T           84 42210 2426 -1485.6  -8906  5934              #> log-Additive                                                  #> 0,1,2                         339.2  -6377  7056  0.9213 3588 #>  #> $snp100019 #>  #> SNP: snp100019  adjusted by:  #>                n    me   se   dif lower upper  p-value  AIC #> Codominant                                                  #> G/G           50 35755 3484     0             0.024010 3605 #> C/G           75 45610 2265  9855  1592 18118               #> C/C           32 48418 4909 12664  2418 22909               #> Dominant                                                    #> G/G           50 35755 3484     0             0.007495 3604 #> C/G-C/C      107 46450 2152 10695  2959 18432               #> Recessive                                                   #> G/G-C/G      125 41668 1986     0             0.147755 3609 #> C/C           32 48418 4909  6750 -2344 15845               #> Overdominant                                                #> G/G-C/C       82 40696 2924     0             0.191682 3609 #> C/G           75 45610 2265  4914 -2430 12257               #> log-Additive                                                #> 0,1,2                        6711  1651 11771 0.010244 3604 #>  #> $snp100020 #>  #> SNP: snp100020  adjusted by:  #>                n    me   se      dif  lower upper p-value  AIC #> Codominant                                                     #> G/G          105 44378 2219      0.0              0.21002 3610 #> A/G           43 42516 3785  -1862.1 -10172  6448              #> A/A            9 30004 8185 -14373.9 -30316  1568              #> Dominant                                                       #> G/G          105 44378 2219      0.0              0.31381 3610 #> A/G-A/A       52 40350 3466  -4027.6 -11839  3784              #> Recessive                                                      #> G/G-A/G      148 43837 1914      0.0              0.08652 3608 #> A/A            9 30004 8185 -13832.9 -29550  1884              #> Overdominant                                                   #> G/G-A/A      114 43243 2163      0.0              0.86338 3611 #> A/G           43 42516 3785   -727.3  -8998  7543              #> log-Additive                                                   #> 0,1,2                        -4655.2 -10827  1517 0.14135 3609 #>  #> $snp100021 #>  #> SNP: snp100021  adjusted by:  #> Monomorphic #>  #> $snp100022 #>  #> SNP: snp100022  adjusted by:  #> Monomorphic #>  #> $snp100023 #>  #> SNP: snp100023  adjusted by:  #>                n    me   se     dif  lower upper p-value  AIC #> Codominant                                                    #> T/T           71 42925 2968    0.00               0.7754 3546 #> A/T           78 42431 2601 -493.69  -8137  7150              #> A/A            5 50262 6879 7336.83 -14225 28898              #> Dominant                                                      #> T/T           71 42925 2968    0.00               0.9954 3544 #> A/T-A/A       83 42903 2480  -21.98  -7543  7499              #> Recessive                                                     #> T/T-A/T      149 42666 1957    0.00               0.4819 3544 #> A/A            5 50262 6879 7595.28 -13523 28714              #> Overdominant                                                  #> T/T-A/A       76 43407 2809    0.00               0.7989 3544 #> A/T           78 42431 2601 -976.38  -8474  6521              #> log-Additive                                                  #> 0,1,2                        752.45  -5982  7487  0.8269 3544 #>  #> $snp100024 #>  #> SNP: snp100024  adjusted by:  #>                n    me   se    dif  lower upper  p-value  AIC #> Codominant                                                    #> T/T           91 46651 2339      0              0.007236 3580 #> C/T           51 40730 3423  -5921 -13775  1934               #> C/C           14 26373 5560 -20278 -33169 -7387               #> Dominant                                                      #> T/T           91 46651 2339      0              0.017738 3582 #> C/T-C/C       65 37638 3013  -9013 -16384 -1643               #> Recessive                                                     #> T/T-C/T      142 44525 1946      0              0.005476 3580 #> C/C           14 26373 5560 -18151 -30778 -5524               #> Overdominant                                                  #> T/T-C/C      105 43948 2253      0              0.424421 3587 #> C/T           51 40730 3423  -3217 -11090  4656               #> log-Additive                                                  #> 0,1,2                        -8554 -14037 -3071 0.002632 3579 #>  #> $snp100025 #>  #> SNP: snp100025  adjusted by:  #> Monomorphic #>  #> $snp100026 #>  #> SNP: snp100026  adjusted by:  #> Monomorphic #>  #> $snp100027 #>  #> SNP: snp100027  adjusted by:  #>                n    me   se     dif  lower upper p-value  AIC #> Codominant                                                    #> C/C           68 43579 3107     0.0               0.9285 3567 #> C/G           82 42103 2455 -1476.6  -9093  6140              #> G/G            5 43460 8071  -119.2 -21636 21398              #> Dominant                                                      #> C/C           68 43579 3107     0.0               0.7150 3566 #> C/G-G/G       87 42181 2350 -1398.6  -8891  6094              #> Recessive                                                     #> C/C-C/G      150 42772 1940     0.0               0.9490 3566 #> G/G            5 43460 8071   688.1 -20363 21739              #> Overdominant                                                  #> C/C-G/G       73 43571 2936     0.0               0.6997 3565 #> C/G           82 42103 2455 -1468.4  -8916  5979              #> log-Additive                                                  #> 0,1,2                       -1056.1  -7780  5668  0.7586 3565 #>  #> $snp100028 #>  #> SNP: snp100028  adjusted by:  #>                n    me   se   dif lower upper  p-value  AIC #> Codominant                                                  #> T/T           50 35399 3489     0             0.014803 3582 #> C/T           72 45474 2317 10075  1744 18406               #> C/C           34 49158 4656 13759  3699 23818               #> Dominant                                                    #> T/T           50 35399 3489     0             0.005040 3581 #> C/T-C/C      106 46656 2163 11256  3503 19010               #> Recessive                                                   #> T/T-C/T      122 41345 2020     0             0.087582 3586 #> C/C           34 49158 4656  7813 -1094 16720               #> Overdominant                                                #> T/T-C/C       84 40968 2883     0             0.235350 3588 #> C/T           72 45474 2317  4506 -2907 11918               #> log-Additive                                                #> 0,1,2                        7166  2184 12148 0.005452 3581 #>  #> $snp100029 #>  #> SNP: snp100029  adjusted by:  #>                n    me   se    dif  lower upper  p-value  AIC #> Codominant                                                    #> G/G           94 46388 2280      0              0.008589 3580 #> A/G           48 40875 3611  -5513 -13488  2462               #> A/A           14 26373 5560 -20015 -32893 -7137               #> Dominant                                                      #> G/G           94 46388 2280      0              0.021834 3583 #> A/G-A/A       62 37601 3142  -8787 -16221 -1353               #> Recessive                                                     #> G/G-A/G      142 44525 1946      0              0.005476 3580 #> A/A           14 26373 5560 -18151 -30778 -5524               #> Overdominant                                                  #> G/G-A/A      108 43794 2200      0              0.476008 3588 #> A/G           48 40875 3611  -2918 -10923  5087               #> log-Additive                                                  #> 0,1,2                        -8355 -13847 -2864 0.003331 3579 #>  #> $snp100030 #>  #> SNP: snp100030  adjusted by:  #> Monomorphic #>  #> $snp100031 #>  #> SNP: snp100031  adjusted by:  #> [1] Genot 65\\\\% #>  #> $snp100032 #>  #> SNP: snp100032  adjusted by:  #>                n    me   se   dif lower upper  p-value  AIC #> Codominant                                                  #> G/G           52 36085 3400     0             0.019427 3581 #> A/G           70 45699 2316  9614  1364 17865               #> A/A           34 49158 4656 13073  3134 23013               #> Dominant                                                    #> G/G           52 36085 3400     0             0.006561 3580 #> A/G-A/A      104 46830 2171 10745  3103 18387               #> Recessive                                                   #> G/G-A/G      122 41601 2005     0             0.096555 3584 #> A/A           34 49158 4656  7557 -1302 16415               #> Overdominant                                                #> G/G-A/A       86 41253 2829     0             0.239934 3586 #> A/G           70 45699 2316  4446 -2940 11832               #> log-Additive                                                #> 0,1,2                        6833  1919 11747 0.007170 3580 #>  #> $snp100033 #>  #> SNP: snp100033  adjusted by:  #>                n    me   se   dif   lower upper  p-value  AIC #> Codominant                                                    #> G/G           49 34773 3502     0               0.012527 3492 #> A/G           69 44984 2400 10211  1716.3 18706               #> A/A           34 49158 4656 14386  4235.8 24535               #> Dominant                                                      #> G/G           49 34773 3502     0               0.004547 3491 #> A/G-A/A      103 46362 2219 11589  3704.7 19474               #> Recessive                                                     #> G/G-A/G      118 40744 2065     0               0.068388 3496 #> A/A           34 49158 4656  8414  -569.8 17399               #> Overdominant                                                  #> G/G-A/A       83 40665 2902     0               0.265441 3498 #> A/G           69 44984 2400  4319 -3253.7 11891               #> log-Additive                                                  #> 0,1,2                        7445  2414.8 12475 0.004282 3491 #>  #> $snp100034 #>  #> SNP: snp100034  adjusted by:  #>                n    me   se    dif  lower upper  p-value  AIC #> Codominant                                                    #> T/T           94 46388 2280      0              0.008589 3580 #> C/T           48 40875 3611  -5513 -13488  2462               #> C/C           14 26373 5560 -20015 -32893 -7137               #> Dominant                                                      #> T/T           94 46388 2280      0              0.021834 3583 #> C/T-C/C       62 37601 3142  -8787 -16221 -1353               #> Recessive                                                     #> T/T-C/T      142 44525 1946      0              0.005476 3580 #> C/C           14 26373 5560 -18151 -30778 -5524               #> Overdominant                                                  #> T/T-C/C      108 43794 2200      0              0.476008 3588 #> C/T           48 40875 3611  -2918 -10923  5087               #> log-Additive                                                  #> 0,1,2                        -8355 -13847 -2864 0.003331 3579 #>  #> $snp100035 #>  #> SNP: snp100035  adjusted by:  #> Monomorphic #>  #> attr(,\"label.SNPs\") #>  [1] \"snp10001\"  \"snp10002\"  \"snp10003\"  \"snp10004\"  \"snp10005\"  \"snp10006\"  #>  [7] \"snp10007\"  \"snp10008\"  \"snp10009\"  \"snp100010\" \"snp100011\" \"snp100012\" #> [13] \"snp100013\" \"snp100014\" \"snp100015\" \"snp100016\" \"snp100017\" \"snp100018\" #> [19] \"snp100019\" \"snp100020\" \"snp100021\" \"snp100022\" \"snp100023\" \"snp100024\" #> [25] \"snp100025\" \"snp100026\" \"snp100027\" \"snp100028\" \"snp100029\" \"snp100030\" #> [31] \"snp100031\" \"snp100032\" \"snp100033\" \"snp100034\" \"snp100035\" #> attr(,\"models\") #> [1] 1 2 3 4 5 #> attr(,\"quantitative\") #> [1] TRUE  #for plotting the p values plot(ansAll) #> Warning: Use of `dat$SNP` is discouraged. Use `SNP` instead. #> Warning: Use of `dat$p.value` is discouraged. Use `p.value` instead. #> Warning: Removed 69 rows containing missing values (geom_point)."}]
